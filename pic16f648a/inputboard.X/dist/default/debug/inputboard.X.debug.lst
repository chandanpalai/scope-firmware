

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue Aug 23 21:32:07 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F648A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "../main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 46 "../main.c"
    45  2007  FF22               	dw 0xFFEE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_eeprom_getch
    47                           	FNCALL	_main,_getCaps
    48                           	FNCALL	_main,_init
    49                           	FNCALL	_main,_usart_putch
    50                           	FNCALL	_init,_pseudoRegisters_init
    51                           	FNCALL	_init,_usart_init
    52                           	FNROOT	_main
    53                           	FNCALL	_isr,_usart_getch
    54                           	FNCALL	intlevel1,_isr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_usart_curpacket
    58                           	global	_MUX
    59                           	global	_RELAY
    60                           	global	_usart_curbyte
    61                           	global	_devcaps
    62                           psect	nvBANK0,class=BANK0,space=1
    63                           global __pnvBANK0
    64  0027                     __pnvBANK0:
    65  0027                     _devcaps:
    66  0027                            ds      2
    67                           
    68                           	global	_devid
    69  0029                     _devid:
    70  0029                            ds      1
    71                           
    72                           	global	_RCREG
    73  001A                     _RCREG	set	26
    74                           	global	_TXREG
    75  0019                     _TXREG	set	25
    76                           	global	_CARRY
    77  0018                     _CARRY	set	24
    78                           	global	_CREN
    79  00C4                     _CREN	set	196
    80                           	global	_GIE
    81  005F                     _GIE	set	95
    82                           	global	_RCIF
    83  0065                     _RCIF	set	101
    84                           	global	_SPEN
    85  00C7                     _SPEN	set	199
    86                           	global	_TXIF
    87  0064                     _TXIF	set	100
    88                           	global	_EEADR
    89  009B                     _EEADR	set	155
    90                           	global	_EECON1
    91  009C                     _EECON1	set	156
    92                           	global	_EECON2
    93  009D                     _EECON2	set	157
    94                           	global	_EEDATA
    95  009A                     _EEDATA	set	154
    96                           	global	_SPBRG
    97  0099                     _SPBRG	set	153
    98                           	global	_TRISBbits
    99  0086                     _TRISBbits	set	134
   100                           	global	_BRGH
   101  04C2                     _BRGH	set	1218
   102                           	global	_RCIE
   103  0465                     _RCIE	set	1125
   104                           	global	_RD
   105  04E0                     _RD	set	1248
   106                           	global	_SYNC
   107  04C4                     _SYNC	set	1220
   108                           	global	_TXEN
   109  04C5                     _TXEN	set	1221
   110                           	global	_TXIE
   111  0464                     _TXIE	set	1124
   112                           	global	_WR
   113  04E1                     _WR	set	1249
   114                           	global	_WREN
   115  04E2                     _WREN	set	1250
   116                           	file	"C:/DOCUME~1/ali/LOCALS~1/Temp\s3ss."
   117                           	line	#
   118                           psect cinit,class=CODE,delta=2
   119                           global start_initialization
   120  00ED                     start_initialization:
   121                           
   122                           psect	bssCOMMON,class=COMMON,space=1
   123                           global __pbssCOMMON
   124  0076                     __pbssCOMMON:
   125  0076                     _MUX:
   126  0076                            ds      1
   127                           
   128  0077                     _RELAY:
   129  0077                            ds      1
   130                           
   131  0078                     _usart_curbyte:
   132  0078                            ds      1
   133                           
   134                           psect	bssBANK0,class=BANK0,space=1
   135                           global __pbssBANK0
   136  002A                     __pbssBANK0:
   137  002A                     _usart_curpacket:
   138  002A                            ds      3
   139                           
   140                           ; Clear objects allocated to COMMON
   141                           psect cinit,class=CODE,delta=2
   142  00ED  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   143  00EE  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   144  00EF  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   145                           ; Clear objects allocated to BANK0
   146                           psect cinit,class=CODE,delta=2
   147  00F0  01AA               	clrf	((__pbssBANK0)+0)&07Fh
   148  00F1  01AB               	clrf	((__pbssBANK0)+1)&07Fh
   149  00F2  01AC               	clrf	((__pbssBANK0)+2)&07Fh
   150                           psect cinit,class=CODE,delta=2
   151                           global end_of_initialization
   152                           
   153                           ;End of C runtime variable initialization code
   154                           
   155  00F3                     end_of_initialization:
   156  00F3  0183               clrf status
   157  00F4  118A  2813         ljmp _main	;jump to C main() function
   158                           psect	cstackCOMMON,class=COMMON,space=1
   159                           global __pcstackCOMMON
   160  0071                     __pcstackCOMMON:
   161                           	global	?_usart_init
   162  0071                     ?_usart_init:	; 0 bytes @ 0x0
   163                           	global	??_usart_getch
   164  0071                     ??_usart_getch:	; 0 bytes @ 0x0
   165                           	global	?_usart_putch
   166  0071                     ?_usart_putch:	; 0 bytes @ 0x0
   167                           	global	?_pseudoRegisters_init
   168  0071                     ?_pseudoRegisters_init:	; 0 bytes @ 0x0
   169                           	global	?_init
   170  0071                     ?_init:	; 0 bytes @ 0x0
   171                           	global	?_isr
   172  0071                     ?_isr:	; 0 bytes @ 0x0
   173                           	global	??_isr
   174  0071                     ??_isr:	; 0 bytes @ 0x0
   175                           	global	?_main
   176  0071                     ?_main:	; 0 bytes @ 0x0
   177                           	global	?_usart_getch
   178  0071                     ?_usart_getch:	; 1 bytes @ 0x0
   179                           	global	?_eeprom_getch
   180  0071                     ?_eeprom_getch:	; 1 bytes @ 0x0
   181  0071                     	ds	5
   182                           	global	??_usart_init
   183  0076                     ??_usart_init:	; 0 bytes @ 0x5
   184                           	global	??_usart_putch
   185  0076                     ??_usart_putch:	; 0 bytes @ 0x5
   186                           	global	??_eeprom_getch
   187  0076                     ??_eeprom_getch:	; 0 bytes @ 0x5
   188                           	global	??_pseudoRegisters_init
   189  0076                     ??_pseudoRegisters_init:	; 0 bytes @ 0x5
   190                           	global	??_init
   191  0076                     ??_init:	; 0 bytes @ 0x5
   192                           	global	??_getCaps
   193  0076                     ??_getCaps:	; 0 bytes @ 0x5
   194                           psect	cstackBANK0,class=BANK0,space=1
   195                           global __pcstackBANK0
   196  0020                     __pcstackBANK0:
   197                           	global	?_getCaps
   198  0020                     ?_getCaps:	; 2 bytes @ 0x0
   199                           	global	eeprom_getch@loc
   200  0020                     eeprom_getch@loc:	; 1 bytes @ 0x0
   201                           	global	usart_putch@byte
   202  0020                     usart_putch@byte:	; 1 bytes @ 0x0
   203  0020                     	ds	2
   204                           	global	getCaps@devid
   205  0022                     getCaps@devid:	; 1 bytes @ 0x2
   206  0022                     	ds	1
   207                           	global	??_main
   208  0023                     ??_main:	; 0 bytes @ 0x3
   209  0023                     	ds	3
   210                           	global	main@acked
   211  0026                     main@acked:	; 1 bytes @ 0x6
   212  0026                     	ds	1
   213 ;;Data sizes: Strings 0, constant 0, data 0, bss 6, persistent 3 stack 0
   214 ;;Auto spaces:   Size  Autos    Used
   215 ;; COMMON          13      5       8
   216 ;; BANK0           80      7      13
   217 ;; BANK1           80      0       0
   218 ;; BANK2           69      0       0
   219                           
   220 ;;
   221 ;; Pointer list with targets:
   222                           
   223                           
   224                           
   225 ;;
   226 ;; Critical Paths under _main in COMMON
   227 ;;
   228 ;;   None.
   229 ;;
   230 ;; Critical Paths under _isr in COMMON
   231 ;;
   232 ;;   None.
   233 ;;
   234 ;; Critical Paths under _main in BANK0
   235 ;;
   236 ;;   _main->_getCaps
   237 ;;
   238 ;; Critical Paths under _isr in BANK0
   239 ;;
   240 ;;   None.
   241 ;;
   242 ;; Critical Paths under _main in BANK1
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _isr in BANK1
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _main in BANK2
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _isr in BANK2
   255 ;;
   256 ;;   None.
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   260 ;;
   261                           
   262 ;;
   263 ;;Call Graph Tables:
   264 ;;
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (0) _main                                                 4     4      0     127
   269 ;;                                              3 BANK0      4     4      0
   270 ;;                       _eeprom_getch
   271 ;;                            _getCaps
   272 ;;                               _init
   273 ;;                        _usart_putch
   274 ;; ---------------------------------------------------------------------------------
   275 ;; (1) _init                                                 0     0      0       0
   276 ;;               _pseudoRegisters_init
   277 ;;                         _usart_init
   278 ;; ---------------------------------------------------------------------------------
   279 ;; (1) _usart_putch                                          1     1      0      31
   280 ;;                                              0 BANK0      1     1      0
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (1) _getCaps                                              3     1      2      31
   283 ;;                                              0 BANK0      3     1      2
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (2) _usart_init                                           0     0      0       0
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (2) _pseudoRegisters_init                                 0     0      0       0
   288 ;; ---------------------------------------------------------------------------------
   289 ;; (1) _eeprom_getch                                         1     1      0      31
   290 ;;                                              0 BANK0      1     1      0
   291 ;; ---------------------------------------------------------------------------------
   292 ;; Estimated maximum stack depth 2
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (3) _isr                                                  5     5      0       0
   297 ;;                                              0 COMMON     5     5      0
   298 ;;                        _usart_getch
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (4) _usart_getch                                          0     0      0       0
   301 ;; ---------------------------------------------------------------------------------
   302 ;; Estimated maximum stack depth 4
   303 ;; ---------------------------------------------------------------------------------
   304                           
   305 ;; Call Graph Graphs:
   306                           
   307 ;; _main (ROOT)
   308 ;;   _eeprom_getch
   309 ;;   _getCaps
   310 ;;   _init
   311 ;;     _pseudoRegisters_init
   312 ;;     _usart_init
   313 ;;   _usart_putch
   314 ;;
   315 ;; _isr (ROOT)
   316 ;;   _usart_getch
   317 ;;
   318                           
   319 ;; Address spaces:
   320                           
   321 ;;Name               Size   Autos  Total    Cost      Usage
   322 ;;BITCOMMON            D      0       0       0        0.0%
   323 ;;EEDATA             100      0       0       0        0.0%
   324 ;;NULL                 0      0       0       0        0.0%
   325 ;;CODE                 0      0       0       0        0.0%
   326 ;;COMMON               D      5       8       1       61.5%
   327 ;;BITSFR0              0      0       0       1        0.0%
   328 ;;SFR0                 0      0       0       1        0.0%
   329 ;;BITSFR1              0      0       0       2        0.0%
   330 ;;SFR1                 0      0       0       2        0.0%
   331 ;;STACK                0      0       6       2        0.0%
   332 ;;BANK0               50      7       D       3       16.3%
   333 ;;BITSFR3              0      0       0       4        0.0%
   334 ;;SFR3                 0      0       0       4        0.0%
   335 ;;ABS                  0      0      15       4        0.0%
   336 ;;BITBANK0            50      0       0       5        0.0%
   337 ;;BITSFR2              0      0       0       5        0.0%
   338 ;;SFR2                 0      0       0       5        0.0%
   339 ;;BITBANK1            50      0       0       6        0.0%
   340 ;;BANK1               50      0       0       7        0.0%
   341 ;;BITBANK2            45      0       0       8        0.0%
   342 ;;BANK2               45      0       0       9        0.0%
   343 ;;DATA                 0      0      1B      10        0.0%
   344                           
   345                           	global	_main
   346                           psect	maintext,global,class=CODE,delta=2
   347                           global __pmaintext
   348  0013                     __pmaintext:
   349                           
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 109 in file "../main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  acked           1    6[BANK0 ] unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;		None               void
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 17F/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   366 ;;      Params:         0       0       0       0
   367 ;;      Locals:         0       1       0       0
   368 ;;      Temps:          0       3       0       0
   369 ;;      Totals:         0       4       0       0
   370 ;;Total ram usage:        4 bytes
   371 ;; Hardware stack levels required when called:    4
   372 ;; This function calls:
   373 ;;		_eeprom_getch
   374 ;;		_getCaps
   375 ;;		_init
   376 ;;		_usart_putch
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           psect	maintext
   382                           	file	"../main.c"
   383                           	line	109
   384                           	global	__size_of_main
   385  004A                     	__size_of_main	equ	__end_of_main-_main
   386                           	
   387  0013                     _main:	
   388                           	opt	stack 4
   389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   390                           	line	110
   391                           	
   392  0013                     l3050:	
   393                           ;main.c: 110: devid = eeprom_getch(0x00);
   394  0013  3000               	movlw	(0)
   395  0014  118A  20D7  118A   	fcall	_eeprom_getch
   396  0017  1283               	bcf	status, 5	;RP0=0, select bank0
   397  0018  1303               	bcf	status, 6	;RP1=0, select bank0
   398  0019  00A3               	movwf	(??_main+0)+0
   399  001A  0823               	movf	(??_main+0)+0,w
   400  001B  00A9               	movwf	(_devid)
   401                           	line	111
   402                           	
   403  001C                     l3052:	
   404                           ;main.c: 111: devcaps = getCaps(devid);
   405  001C  0829               	movf	(_devid),w
   406  001D  118A  208F  118A   	fcall	_getCaps
   407  0020  1283               	bcf	status, 5	;RP0=0, select bank0
   408  0021  1303               	bcf	status, 6	;RP1=0, select bank0
   409  0022  0821               	movf	(1+(?_getCaps)),w
   410  0023  01A8               	clrf	(_devcaps+1)
   411  0024  07A8               	addwf	(_devcaps+1)
   412  0025  0820               	movf	(0+(?_getCaps)),w
   413  0026  01A7               	clrf	(_devcaps)
   414  0027  07A7               	addwf	(_devcaps)
   415                           
   416                           	line	113
   417                           	
   418  0028                     l3054:	
   419                           ;main.c: 113: init();
   420  0028  118A  20BB  118A   	fcall	_init
   421                           	line	115
   422                           	
   423  002B                     l3056:	
   424                           ;main.c: 115: if(devcaps & 0x01)
   425  002B  1283               	bcf	status, 5	;RP0=0, select bank0
   426  002C  1303               	bcf	status, 6	;RP1=0, select bank0
   427  002D  1C27               	btfss	(_devcaps),(0)&7
   428  002E  2830               	goto	u2411
   429  002F  2831               	goto	u2410
   430  0030                     u2411:
   431  0030  285A               	goto	l803
   432  0031                     u2410:
   433                           	line	117
   434                           	
   435  0031                     l3058:	
   436                           ;main.c: 116: {
   437                           ;main.c: 117: unsigned char acked = 0;
   438  0031  01A6               	clrf	(main@acked)
   439                           	line	118
   440                           ;main.c: 118: while(!acked)
   441  0032  2851               	goto	l3064
   442                           	
   443  0033                     l800:	
   444                           	line	120
   445                           	
   446  0033                     l3060:	
   447                           ;main.c: 119: {
   448                           ;main.c: 120: usart_putch(0x02);
   449  0033  3002               	movlw	(02h)
   450  0034  118A  20CB  118A   	fcall	_usart_putch
   451                           	line	121
   452                           ;main.c: 121: usart_putch(devid);
   453  0037  1283               	bcf	status, 5	;RP0=0, select bank0
   454  0038  1303               	bcf	status, 6	;RP1=0, select bank0
   455  0039  0829               	movf	(_devid),w
   456  003A  118A  20CB  118A   	fcall	_usart_putch
   457                           	line	122
   458                           ;main.c: 122: usart_putch(0x00);
   459  003D  3000               	movlw	(0)
   460  003E  118A  20CB  118A   	fcall	_usart_putch
   461                           	line	123
   462                           	
   463  0041                     l3062:	
   464                           ;main.c: 123: _delay((unsigned long)((100)*(20000000/4000.0)));
   465                           	opt asmopt_off
   466  0041  3003               movlw  3
   467  0042  1283               	bcf	status, 5	;RP0=0, select bank0
   468  0043  1303               	bcf	status, 6	;RP1=0, select bank0
   469  0044  00A5               movwf	((??_main+0)+0+2),f
   470  0045  308A               movlw	138
   471  0046  00A4               movwf	((??_main+0)+0+1),f
   472  0047  3056               	movlw	86
   473  0048  00A3               movwf	((??_main+0)+0),f
   474  0049                     u2437:
   475  0049  0BA3               	decfsz	((??_main+0)+0),f
   476  004A  2849               	goto	u2437
   477  004B  0BA4               	decfsz	((??_main+0)+0+1),f
   478  004C  2849               	goto	u2437
   479  004D  0BA5               	decfsz	((??_main+0)+0+2),f
   480  004E  2849               	goto	u2437
   481  004F  2850               	nop2
   482                           opt asmopt_on
   483                           
   484  0050  2851               	goto	l3064
   485                           	line	124
   486                           	
   487  0051                     l799:	
   488                           	line	118
   489                           	
   490  0051                     l3064:	
   491  0051  1283               	bcf	status, 5	;RP0=0, select bank0
   492  0052  1303               	bcf	status, 6	;RP1=0, select bank0
   493  0053  0826               	movf	(main@acked),w
   494  0054  1D03               	skipz
   495  0055  2857               	goto	u2420
   496  0056  2833               	goto	l3060
   497  0057                     u2420:
   498  0057  285A               	goto	l803
   499                           	
   500  0058                     l801:	
   501  0058  285A               	goto	l803
   502                           	line	125
   503                           	
   504  0059                     l798:	
   505  0059  285A               	goto	l803
   506                           	line	127
   507                           ;main.c: 124: }
   508                           ;main.c: 125: }
   509                           ;main.c: 127: while(1)
   510                           	
   511  005A                     l802:	
   512                           	line	130
   513                           ;main.c: 128: {
   514                           	
   515  005A                     l803:	
   516                           	line	127
   517  005A  285A               	goto	l803
   518                           	
   519  005B                     l804:	
   520                           	line	131
   521                           	
   522  005B                     l805:	
   523                           	global	start
   524  005B  118A  2811         	ljmp	start
   525                           	opt stack 0
   526                           GLOBAL	__end_of_main
   527  005D                     	__end_of_main:
   528 ;; =============== function _main ends ============
   529                           
   530                           	signat	_main,88
   531                           	global	_init
   532                           psect	text315,local,class=CODE,delta=2
   533                           global __ptext315
   534  00BB                     __ptext315:
   535                           
   536 ;; *************** function _init *****************
   537 ;; Defined at:
   538 ;;		line 58 in file "../main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;		None               void
   545 ;; Registers used:
   546 ;;		status,2, status,0, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   552 ;;      Params:         0       0       0       0
   553 ;;      Locals:         0       0       0       0
   554 ;;      Temps:          0       0       0       0
   555 ;;      Totals:         0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    3
   559 ;; This function calls:
   560 ;;		_pseudoRegisters_init
   561 ;;		_usart_init
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           psect	text315
   567                           	file	"../main.c"
   568                           	line	58
   569                           	global	__size_of_init
   570  0010                     	__size_of_init	equ	__end_of_init-_init
   571                           	
   572  00BB                     _init:	
   573                           	opt	stack 4
   574                           ; Regs used in _init: [status,2+status,0+pclath+cstack]
   575                           	line	59
   576                           	
   577  00BB                     l2996:	
   578                           ;main.c: 59: pseudoRegisters_init();
   579  00BB  118A  20F6  118A   	fcall	_pseudoRegisters_init
   580                           	line	61
   581                           	
   582  00BE                     l2998:	
   583                           ;main.c: 61: GIE = 1;
   584  00BE  178B               	bsf	(95/8),(95)&7
   585                           	line	63
   586                           	
   587  00BF                     l3000:	
   588                           ;main.c: 63: usart_curbyte = 0;
   589  00BF  01F8               	clrf	(_usart_curbyte)
   590                           	line	65
   591                           	
   592  00C0                     l3002:	
   593                           ;main.c: 65: if(devcaps & 0x01)
   594  00C0  1283               	bcf	status, 5	;RP0=0, select bank0
   595  00C1  1303               	bcf	status, 6	;RP1=0, select bank0
   596  00C2  1C27               	btfss	(_devcaps),(0)&7
   597  00C3  28C5               	goto	u2371
   598  00C4  28C6               	goto	u2370
   599  00C5                     u2371:
   600  00C5  28CA               	goto	l780
   601  00C6                     u2370:
   602                           	line	66
   603                           	
   604  00C6                     l3004:	
   605                           ;main.c: 66: usart_init();
   606  00C6  118A  20A8  118A   	fcall	_usart_init
   607  00C9  28CA               	goto	l780
   608                           	
   609  00CA                     l779:	
   610                           	line	67
   611                           	
   612  00CA                     l780:	
   613  00CA  0008               	return
   614                           	opt stack 0
   615                           GLOBAL	__end_of_init
   616  00CB                     	__end_of_init:
   617 ;; =============== function _init ends ============
   618                           
   619                           	signat	_init,88
   620                           	global	_usart_putch
   621                           psect	text316,local,class=CODE,delta=2
   622                           global __ptext316
   623  00CB                     __ptext316:
   624                           
   625 ;; *************** function _usart_putch *****************
   626 ;; Defined at:
   627 ;;		line 28 in file "../usart.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  byte            1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  byte            1    0[BANK0 ] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;		None               void
   634 ;; Registers used:
   635 ;;		wreg
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   641 ;;      Params:         0       0       0       0
   642 ;;      Locals:         0       1       0       0
   643 ;;      Temps:          0       0       0       0
   644 ;;      Totals:         0       1       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           psect	text316
   655                           	file	"../usart.c"
   656                           	line	28
   657                           	global	__size_of_usart_putch
   658  000C                     	__size_of_usart_putch	equ	__end_of_usart_putch-_usart_putch
   659                           	
   660  00CB                     _usart_putch:	
   661                           	opt	stack 5
   662                           ; Regs used in _usart_putch: [wreg]
   663                           ;usart_putch@byte stored from wreg
   664  00CB  1283               	bcf	status, 5	;RP0=0, select bank0
   665  00CC  1303               	bcf	status, 6	;RP1=0, select bank0
   666  00CD  00A0               	movwf	(usart_putch@byte)
   667                           	line	30
   668                           	
   669  00CE                     l3046:	
   670                           ;usart.c: 30: while(!TXIF)
   671  00CE  28CF               	goto	l1189
   672                           	
   673  00CF                     l1190:	
   674                           	line	31
   675                           ;usart.c: 31: continue;
   676                           	
   677  00CF                     l1189:	
   678                           	line	30
   679  00CF  1E0C               	btfss	(100/8),(100)&7
   680  00D0  28D2               	goto	u2401
   681  00D1  28D3               	goto	u2400
   682  00D2                     u2401:
   683  00D2  28CF               	goto	l1189
   684  00D3                     u2400:
   685  00D3  28D4               	goto	l3048
   686                           	
   687  00D4                     l1191:	
   688                           	line	32
   689                           	
   690  00D4                     l3048:	
   691                           ;usart.c: 32: TXREG = byte;
   692  00D4  0820               	movf	(usart_putch@byte),w
   693  00D5  0099               	movwf	(25)	;volatile
   694                           	line	33
   695                           	
   696  00D6                     l1192:	
   697  00D6  0008               	return
   698                           	opt stack 0
   699                           GLOBAL	__end_of_usart_putch
   700  00D7                     	__end_of_usart_putch:
   701 ;; =============== function _usart_putch ends ============
   702                           
   703                           	signat	_usart_putch,4216
   704                           	global	_getCaps
   705                           psect	text317,local,class=CODE,delta=2
   706                           global __ptext317
   707  008F                     __ptext317:
   708                           
   709 ;; *************** function _getCaps *****************
   710 ;; Defined at:
   711 ;;		line 94 in file "../main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  devid           1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  devid           1    2[BANK0 ] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2    0[BANK0 ] int 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   725 ;;      Params:         0       2       0       0
   726 ;;      Locals:         0       1       0       0
   727 ;;      Temps:          0       0       0       0
   728 ;;      Totals:         0       3       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    2
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           psect	text317
   739                           	file	"../main.c"
   740                           	line	94
   741                           	global	__size_of_getCaps
   742  0019                     	__size_of_getCaps	equ	__end_of_getCaps-_getCaps
   743                           	
   744  008F                     _getCaps:	
   745                           	opt	stack 5
   746                           ; Regs used in _getCaps: [wreg-fsr0h+status,2+status,0]
   747                           ;getCaps@devid stored from wreg
   748  008F  1283               	bcf	status, 5	;RP0=0, select bank0
   749  0090  1303               	bcf	status, 6	;RP1=0, select bank0
   750  0091  00A2               	movwf	(getCaps@devid)
   751                           	line	95
   752                           	
   753  0092                     l3028:	
   754                           ;main.c: 95: switch(devid)
   755  0092  289F               	goto	l3044
   756                           	line	97
   757                           ;main.c: 96: {
   758                           ;main.c: 97: case 0xA0:
   759                           	
   760  0093                     l791:	
   761                           	line	98
   762                           	
   763  0093                     l3030:	
   764                           ;main.c: 98: return 0x01 & 0x04 & (0x10 & 0x20 & 0x30);
   765  0093  01A0               	clrf	(?_getCaps)
   766  0094  01A1               	clrf	(?_getCaps+1)
   767  0095  28A7               	goto	l792
   768                           	
   769  0096                     l3032:	
   770  0096  28A7               	goto	l792
   771                           	line	99
   772                           	
   773  0097                     l3034:	
   774                           ;main.c: 99: break;
   775  0097  28A7               	goto	l792
   776                           	line	100
   777                           ;main.c: 100: case 0xA2:
   778                           	
   779  0098                     l794:	
   780                           	line	101
   781                           	
   782  0098                     l3036:	
   783                           ;main.c: 101: return 0x01 & 0x02 & 0x04 & 0x08 & ((0x10 & 0x20 & 0x30) & 0x40);
   784  0098  01A0               	clrf	(?_getCaps)
   785  0099  01A1               	clrf	(?_getCaps+1)
   786  009A  28A7               	goto	l792
   787                           	
   788  009B                     l3038:	
   789  009B  28A7               	goto	l792
   790                           	line	102
   791                           	
   792  009C                     l3040:	
   793                           ;main.c: 102: break;
   794  009C  28A7               	goto	l792
   795                           	line	103
   796                           ;main.c: 103: default:
   797                           	
   798  009D                     l795:	
   799                           	line	104
   800                           ;main.c: 104: break;
   801  009D  28A7               	goto	l792
   802                           	line	105
   803                           	
   804  009E                     l3042:	
   805                           ;main.c: 105: }
   806  009E  28A7               	goto	l792
   807                           	line	95
   808                           	
   809  009F                     l790:	
   810                           	
   811  009F                     l3044:	
   812  009F  0822               	movf	(getCaps@devid),w
   813                           	; Switch size 1, requested type "space"
   814                           ; Number of cases is 2, Range of values is 160 to 162
   815                           ; switch strategies available:
   816                           ; Name         Instructions Cycles
   817                           ; simple_byte            7     4 (average)
   818                           ; direct_byte           16    10 (fixed)
   819                           ; jumptable            263     9 (fixed)
   820                           ;	Chosen strategy is simple_byte
   821                           
   822                           	opt asmopt_off
   823  00A0  3AA0               	xorlw	160^0	; case 160
   824  00A1  1903               	skipnz
   825  00A2  2893               	goto	l3030
   826  00A3  3A02               	xorlw	162^160	; case 162
   827  00A4  1903               	skipnz
   828  00A5  2898               	goto	l3036
   829  00A6  28A7               	goto	l792
   830                           	opt asmopt_on
   831                           
   832                           	line	105
   833                           	
   834  00A7                     l793:	
   835                           	line	106
   836                           	
   837  00A7                     l792:	
   838  00A7  0008               	return
   839                           	opt stack 0
   840                           GLOBAL	__end_of_getCaps
   841  00A8                     	__end_of_getCaps:
   842 ;; =============== function _getCaps ends ============
   843                           
   844                           	signat	_getCaps,4218
   845                           	global	_usart_init
   846                           psect	text318,local,class=CODE,delta=2
   847                           global __ptext318
   848  00A8                     __ptext318:
   849                           
   850 ;; *************** function _usart_init *****************
   851 ;; Defined at:
   852 ;;		line 7 in file "../usart.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		status,2
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   866 ;;      Params:         0       0       0       0
   867 ;;      Locals:         0       0       0       0
   868 ;;      Temps:          0       0       0       0
   869 ;;      Totals:         0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    2
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_init
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           psect	text318
   880                           	file	"../usart.c"
   881                           	line	7
   882                           	global	__size_of_usart_init
   883  0013                     	__size_of_usart_init	equ	__end_of_usart_init-_usart_init
   884                           	
   885  00A8                     _usart_init:	
   886                           	opt	stack 4
   887                           ; Regs used in _usart_init: [status,2]
   888                           	line	9
   889                           	
   890  00A8                     l2936:	
   891                           ;usart.c: 9: TRISBbits.TRISB1 = 1;
   892  00A8  1683               	bsf	status, 5	;RP0=1, select bank1
   893  00A9  1303               	bcf	status, 6	;RP1=0, select bank1
   894  00AA  1486               	bsf	(134)^080h,1	;volatile
   895                           	line	10
   896                           ;usart.c: 10: TRISBbits.TRISB2 = 1;
   897  00AB  1506               	bsf	(134)^080h,2	;volatile
   898                           	line	12
   899                           	
   900  00AC                     l2938:	
   901                           ;usart.c: 12: SPBRG = 0;
   902  00AC  0199               	clrf	(153)^080h	;volatile
   903                           	line	14
   904                           	
   905  00AD                     l2940:	
   906                           ;usart.c: 14: BRGH = 1;
   907  00AD  1518               	bsf	(1218/8)^080h,(1218)&7
   908                           	line	15
   909                           	
   910  00AE                     l2942:	
   911                           ;usart.c: 15: SYNC = 0;
   912  00AE  1218               	bcf	(1220/8)^080h,(1220)&7
   913                           	line	16
   914                           	
   915  00AF                     l2944:	
   916                           ;usart.c: 16: SPEN = 1;
   917  00AF  1283               	bcf	status, 5	;RP0=0, select bank0
   918  00B0  1303               	bcf	status, 6	;RP1=0, select bank0
   919  00B1  1798               	bsf	(199/8),(199)&7
   920                           	line	18
   921                           	
   922  00B2                     l2946:	
   923                           ;usart.c: 18: TXIE = 1;
   924  00B2  1683               	bsf	status, 5	;RP0=1, select bank1
   925  00B3  1303               	bcf	status, 6	;RP1=0, select bank1
   926  00B4  160C               	bsf	(1124/8)^080h,(1124)&7
   927                           	line	19
   928                           	
   929  00B5                     l2948:	
   930                           ;usart.c: 19: TXEN = 1;
   931  00B5  1698               	bsf	(1221/8)^080h,(1221)&7
   932                           	line	21
   933                           	
   934  00B6                     l2950:	
   935                           ;usart.c: 21: RCIE = 1;
   936  00B6  168C               	bsf	(1125/8)^080h,(1125)&7
   937                           	line	22
   938                           	
   939  00B7                     l2952:	
   940                           ;usart.c: 22: CREN = 1;
   941  00B7  1283               	bcf	status, 5	;RP0=0, select bank0
   942  00B8  1303               	bcf	status, 6	;RP1=0, select bank0
   943  00B9  1618               	bsf	(196/8),(196)&7
   944                           	line	24
   945                           	
   946  00BA                     l1186:	
   947  00BA  0008               	return
   948                           	opt stack 0
   949                           GLOBAL	__end_of_usart_init
   950  00BB                     	__end_of_usart_init:
   951 ;; =============== function _usart_init ends ============
   952                           
   953                           	signat	_usart_init,88
   954                           	global	_pseudoRegisters_init
   955                           psect	text319,local,class=CODE,delta=2
   956                           global __ptext319
   957  00F6                     __ptext319:
   958                           
   959 ;; *************** function _pseudoRegisters_init *****************
   960 ;; Defined at:
   961 ;;		line 61 in file "../input.h"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;		None               void
   968 ;; Registers used:
   969 ;;		None
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   975 ;;      Params:         0       0       0       0
   976 ;;      Locals:         0       0       0       0
   977 ;;      Temps:          0       0       0       0
   978 ;;      Totals:         0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    2
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_init
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           psect	text319
   989                           	file	"../input.h"
   990                           	line	61
   991                           	global	__size_of_pseudoRegisters_init
   992  0003                     	__size_of_pseudoRegisters_init	equ	__end_of_pseudoRegisters_init-_pseudoRegisters_init
   993                           	
   994  00F6                     _pseudoRegisters_init:	
   995                           	opt	stack 4
   996                           ; Regs used in _pseudoRegisters_init: []
   997                           	line	62
   998                           	
   999  00F6                     l2934:	
  1000                           ;input.h: 62: RELAY = 0x00;
  1001  00F6  01F7               	clrf	(_RELAY)
  1002                           	line	63
  1003                           ;input.h: 63: MUX = 0x00;
  1004  00F7  01F6               	clrf	(_MUX)
  1005                           	line	64
  1006                           	
  1007  00F8                     l776:	
  1008  00F8  0008               	return
  1009                           	opt stack 0
  1010                           GLOBAL	__end_of_pseudoRegisters_init
  1011  00F9                     	__end_of_pseudoRegisters_init:
  1012 ;; =============== function _pseudoRegisters_init ends ============
  1013                           
  1014                           	signat	_pseudoRegisters_init,88
  1015                           	global	_eeprom_getch
  1016                           psect	text320,local,class=CODE,delta=2
  1017                           global __ptext320
  1018  00D7                     __ptext320:
  1019                           
  1020 ;; *************** function _eeprom_getch *****************
  1021 ;; Defined at:
  1022 ;;		line 42 in file "../eeprom.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  loc             1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  loc             1    0[BANK0 ] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1036 ;;      Params:         0       0       0       0
  1037 ;;      Locals:         0       1       0       0
  1038 ;;      Temps:          0       0       0       0
  1039 ;;      Totals:         0       1       0       0
  1040 ;;Total ram usage:        1 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    2
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           psect	text320
  1050                           	file	"../eeprom.c"
  1051                           	line	42
  1052                           	global	__size_of_eeprom_getch
  1053  000B                     	__size_of_eeprom_getch	equ	__end_of_eeprom_getch-_eeprom_getch
  1054                           	
  1055  00D7                     _eeprom_getch:	
  1056                           	opt	stack 5
  1057                           ; Regs used in _eeprom_getch: [wreg]
  1058                           ;eeprom_getch@loc stored from wreg
  1059  00D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1060  00D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1061  00D9  00A0               	movwf	(eeprom_getch@loc)
  1062                           	line	43
  1063                           	
  1064  00DA                     l3022:	
  1065                           ;eeprom.c: 43: EEADR = loc;
  1066  00DA  0820               	movf	(eeprom_getch@loc),w
  1067  00DB  1683               	bsf	status, 5	;RP0=1, select bank1
  1068  00DC  1303               	bcf	status, 6	;RP1=0, select bank1
  1069  00DD  009B               	movwf	(155)^080h	;volatile
  1070                           	line	44
  1071                           	
  1072  00DE                     l3024:	
  1073                           ;eeprom.c: 44: RD = 1;
  1074  00DE  141C               	bsf	(1248/8)^080h,(1248)&7
  1075                           	line	45
  1076                           ;eeprom.c: 45: return EEDATA;
  1077  00DF  081A               	movf	(154)^080h,w	;volatile
  1078  00E0  28E1               	goto	l377
  1079                           	
  1080  00E1                     l3026:	
  1081                           	line	46
  1082                           	
  1083  00E1                     l377:	
  1084  00E1  0008               	return
  1085                           	opt stack 0
  1086                           GLOBAL	__end_of_eeprom_getch
  1087  00E2                     	__end_of_eeprom_getch:
  1088 ;; =============== function _eeprom_getch ends ============
  1089                           
  1090                           	signat	_eeprom_getch,4217
  1091                           	global	_isr
  1092                           psect	text321,local,class=CODE,delta=2
  1093                           global __ptext321
  1094  005D                     __ptext321:
  1095                           
  1096 ;; *************** function _isr *****************
  1097 ;; Defined at:
  1098 ;;		line 70 in file "../main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;		None               void
  1105 ;; Registers used:
  1106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1112 ;;      Params:         0       0       0       0
  1113 ;;      Locals:         0       0       0       0
  1114 ;;      Temps:          5       0       0       0
  1115 ;;      Totals:         5       0       0       0
  1116 ;;Total ram usage:        5 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    1
  1119 ;; This function calls:
  1120 ;;		_usart_getch
  1121 ;; This function is called by:
  1122 ;;		Interrupt level 1
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           psect	text321
  1126                           	file	"../main.c"
  1127                           	line	70
  1128                           	global	__size_of_isr
  1129  0032                     	__size_of_isr	equ	__end_of_isr-_isr
  1130                           	
  1131  005D                     _isr:	
  1132                           	opt	stack 4
  1133                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1134                           psect	intentry,class=CODE,delta=2
  1135                           global __pintentry
  1136  0004                     __pintentry:
  1137                           global interrupt_function
  1138  0004                     interrupt_function:
  1139                           	global saved_w
  1140  007E                     	saved_w	set	btemp+0
  1141  0004  00FE               	movwf	saved_w
  1142  0005  0E03               	swapf	status,w
  1143  0006  00F2               	movwf	(??_isr+1)
  1144  0007  0804               	movf	fsr0,w
  1145  0008  00F3               	movwf	(??_isr+2)
  1146  0009  080A               	movf	pclath,w
  1147  000A  00F4               	movwf	(??_isr+3)
  1148  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1149  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1150  000D  087F               	movf	btemp+1,w
  1151  000E  00F5               	movwf	(??_isr+4)
  1152  000F  118A  285D         	ljmp	_isr
  1153                           psect	text321
  1154                           	line	71
  1155                           	
  1156  005D                     i1l2954:	
  1157                           ;main.c: 71: if(devcaps & 0x01)
  1158  005D  1C27               	btfss	(_devcaps),(0)&7
  1159  005E  2860               	goto	u231_21
  1160  005F  2861               	goto	u231_20
  1161  0060                     u231_21:
  1162  0060  2884               	goto	i1l787
  1163  0061                     u231_20:
  1164                           	line	73
  1165                           	
  1166  0061                     i1l2956:	
  1167                           ;main.c: 72: {
  1168                           ;main.c: 73: if(TXIF)
  1169  0061  1E0C               	btfss	(100/8),(100)&7
  1170  0062  2864               	goto	u232_21
  1171  0063  2865               	goto	u232_20
  1172  0064                     u232_21:
  1173  0064  2866               	goto	i1l784
  1174  0065                     u232_20:
  1175                           	line	75
  1176                           	
  1177  0065                     i1l2958:	
  1178                           ;main.c: 74: {
  1179                           ;main.c: 75: TXIF = 0;
  1180  0065  120C               	bcf	(100/8),(100)&7
  1181                           	line	76
  1182                           	
  1183  0066                     i1l784:	
  1184                           	line	77
  1185                           ;main.c: 76: }
  1186                           ;main.c: 77: if(RCIF)
  1187  0066  1E8C               	btfss	(101/8),(101)&7
  1188  0067  2869               	goto	u233_21
  1189  0068  286A               	goto	u233_20
  1190  0069                     u233_21:
  1191  0069  2884               	goto	i1l787
  1192  006A                     u233_20:
  1193                           	line	80
  1194                           	
  1195  006A                     i1l2960:	
  1196                           ;main.c: 78: {
  1197                           ;main.c: 80: usart_curpacket[usart_curbyte] = usart_getch();
  1198  006A  118A  20E2  118A   	fcall	_usart_getch
  1199  006D  00F1               	movwf	(??_isr+0)+0
  1200  006E  0878               	movf	(_usart_curbyte),w
  1201  006F  3E2A               	addlw	_usart_curpacket&0ffh
  1202  0070  0084               	movwf	fsr0
  1203  0071  0871               	movf	(??_isr+0)+0,w
  1204  0072  1383               	bcf	status, 7	;select IRP bank0
  1205  0073  0080               	movwf	indf
  1206                           	line	81
  1207                           	
  1208  0074                     i1l2962:	
  1209                           ;main.c: 81: usart_curbyte++;
  1210  0074  3001               	movlw	(01h)
  1211  0075  00F1               	movwf	(??_isr+0)+0
  1212  0076  0871               	movf	(??_isr+0)+0,w
  1213  0077  07F8               	addwf	(_usart_curbyte),f
  1214                           	line	82
  1215                           	
  1216  0078                     i1l2964:	
  1217                           ;main.c: 82: if(usart_curbyte == 3)
  1218  0078  0878               	movf	(_usart_curbyte),w
  1219  0079  3A03               	xorlw	03h
  1220  007A  1D03               	skipz
  1221  007B  287D               	goto	u234_21
  1222  007C  287E               	goto	u234_20
  1223  007D                     u234_21:
  1224  007D  287F               	goto	i1l786
  1225  007E                     u234_20:
  1226                           	line	85
  1227                           	
  1228  007E                     i1l2966:	
  1229                           ;main.c: 83: {
  1230                           ;main.c: 85: usart_curbyte = 0;
  1231  007E  01F8               	clrf	(_usart_curbyte)
  1232                           	line	86
  1233                           	
  1234  007F                     i1l786:	
  1235                           	line	88
  1236                           ;main.c: 86: }
  1237                           ;main.c: 88: RCIF = 0;
  1238  007F  1283               	bcf	status, 5	;RP0=0, select bank0
  1239  0080  1303               	bcf	status, 6	;RP1=0, select bank0
  1240  0081  128C               	bcf	(101/8),(101)&7
  1241  0082  2884               	goto	i1l787
  1242                           	line	89
  1243                           	
  1244  0083                     i1l785:	
  1245  0083  2884               	goto	i1l787
  1246                           	line	90
  1247                           	
  1248  0084                     i1l783:	
  1249                           	line	91
  1250                           	
  1251  0084                     i1l787:	
  1252  0084  0875               	movf	(??_isr+4),w
  1253  0085  00FF               	movwf	btemp+1
  1254  0086  0874               	movf	(??_isr+3),w
  1255  0087  008A               	movwf	pclath
  1256  0088  0873               	movf	(??_isr+2),w
  1257  0089  0084               	movwf	fsr0
  1258  008A  0E72               	swapf	(??_isr+1)^0FFFFFF80h,w
  1259  008B  0083               	movwf	status
  1260  008C  0EFE               	swapf	saved_w,f
  1261  008D  0E7E               	swapf	saved_w,w
  1262  008E  0009               	retfie
  1263                           	opt stack 0
  1264                           GLOBAL	__end_of_isr
  1265  008F                     	__end_of_isr:
  1266 ;; =============== function _isr ends ============
  1267                           
  1268                           	signat	_isr,88
  1269                           	global	_usart_getch
  1270                           psect	text322,local,class=CODE,delta=2
  1271                           global __ptext322
  1272  00E2                     __ptext322:
  1273                           
  1274 ;; *************** function _usart_getch *****************
  1275 ;; Defined at:
  1276 ;;		line 36 in file "../usart.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1290 ;;      Params:         0       0       0       0
  1291 ;;      Locals:         0       0       0       0
  1292 ;;      Temps:          0       0       0       0
  1293 ;;      Totals:         0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_isr
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           psect	text322
  1303                           	file	"../usart.c"
  1304                           	line	36
  1305                           	global	__size_of_usart_getch
  1306  000B                     	__size_of_usart_getch	equ	__end_of_usart_getch-_usart_getch
  1307                           	
  1308  00E2                     _usart_getch:	
  1309                           	opt	stack 4
  1310                           ; Regs used in _usart_getch: [wreg]
  1311                           	line	38
  1312                           	
  1313  00E2                     i1l2968:	
  1314                           ;usart.c: 38: while(!RCIF)
  1315  00E2  28E3               	goto	i1l1195
  1316                           	
  1317  00E3                     i1l1196:	
  1318                           	line	39
  1319                           ;usart.c: 39: continue;
  1320                           	
  1321  00E3                     i1l1195:	
  1322                           	line	38
  1323  00E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1324  00E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1325  00E5  1E8C               	btfss	(101/8),(101)&7
  1326  00E6  28E8               	goto	u235_21
  1327  00E7  28E9               	goto	u235_20
  1328  00E8                     u235_21:
  1329  00E8  28E3               	goto	i1l1195
  1330  00E9                     u235_20:
  1331  00E9  28EA               	goto	i1l2970
  1332                           	
  1333  00EA                     i1l1197:	
  1334                           	line	40
  1335                           	
  1336  00EA                     i1l2970:	
  1337                           ;usart.c: 40: return RCREG;
  1338  00EA  081A               	movf	(26),w	;volatile
  1339  00EB  28EC               	goto	i1l1198
  1340                           	
  1341  00EC                     i1l2972:	
  1342                           	line	41
  1343                           	
  1344  00EC                     i1l1198:	
  1345  00EC  0008               	return
  1346                           	opt stack 0
  1347                           GLOBAL	__end_of_usart_getch
  1348  00ED                     	__end_of_usart_getch:
  1349 ;; =============== function _usart_getch ends ============
  1350                           
  1351                           	signat	_usart_getch,89
  1352                           psect	text323,local,class=CODE,delta=2
  1353                           global __ptext323
  1354  0000                     __ptext323:
  1355                           	global	btemp
  1356  007E                     	btemp set 07Eh
  1357                           
  1358                           	DABS	1,126,2	;btemp
  1359                           	global	wtemp0
  1360  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Aug 23 21:32:07 2011

                           _RD 04E0                             _WR 04E1                            l800 0033  
                          l377 00E1                            l801 0058                            l802 005A  
                          l803 005A                            l804 005B                            l805 005B  
                          l780 00CA                            l790 009F                            l791 0093  
                          l776 00F8                            l792 00A7                            l793 00A7  
                          l794 0098                            l795 009D                            l779 00CA  
                          l798 0059                            l799 0051                            _GIE 005F  
                          _MUX 0076                            _isr 005D                            fsr0 0004  
                          indf 0000                 ??_eeprom_getch 0076                           l3000 00BF  
                         l3002 00C0                           l3004 00C6                           l3022 00DA  
                         l3030 0093                           l1190 00CF                           l1191 00D4  
                         l3024 00DE                           l3040 009C                           l3032 0096  
                         l1192 00D6                           l3026 00E1                           l1186 00BA  
                         l3042 009E                           l3034 0097                           l3050 0013  
                         l3036 0098                           l3044 009F                           l3028 0092  
                         l3060 0033                           l3052 001C                           l1189 00CF  
                         l3038 009B                           l3046 00CE                           l3062 0041  
                         l3054 0028                           l3048 00D4                           l3064 0051  
                         l3056 002B                           l3058 0031                           l2940 00AD  
                         l2934 00F6                           l2950 00B6                           l2942 00AE  
                         l2952 00B7                           l2944 00AF                           l2936 00A8  
                         l2946 00B2                           l2938 00AC                           l2948 00B5  
                         l2996 00BB                           l2998 00BE                           ?_isr 0071  
                         _BRGH 04C2                           _CREN 00C4                           u2400 00D3  
                         u2401 00D2                           u2410 0031                           u2411 0030  
                         u2420 0057                           u2370 00C6                           u2371 00C5  
                         u2437 0049                           _RCIE 0465                           _RCIF 0065  
                         _SPEN 00C7                           _TXIE 0464                           _WREN 04E2  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                  _usart_getch 00E2                           _main 0013                           _init 00BB  
                  _usart_putch 00CB                           btemp 007E                           start 0011  
                        ??_isr 0071                          ?_main 0071                          ?_init 0071  
                        _EEADR 009B                          _CARRY 0018                          i1l783 0084  
                        i1l784 0066                          i1l785 0083                          i1l786 007F  
                        i1l787 0084                          _RCREG 001A                          _RELAY 0077  
                        _SPBRG 0099                          _TXREG 0019                __end_of_getCaps 00A8  
                        _devid 0029                          pclath 000A                          status 0003  
                        wtemp0 007E                   __end_of_main 005D                   __end_of_init 00CB  
                       ??_main 0023                         ??_init 0076                         _EEDATA 009A  
                       _EECON1 009C                         _EECON2 009D                         i1l1195 00E3  
                       i1l1196 00E3                         i1l1197 00EA                         i1l1198 00EC  
                       i1l2960 006A                         i1l2970 00EA                         i1l2962 0074  
                       i1l2954 005D                         i1l2972 00EC                         i1l2964 0078  
                       i1l2956 0061                         i1l2966 007E                         i1l2958 0065  
                       i1l2968 00E2                         u231_20 0061                         u231_21 0060  
                       u232_20 0065                         u232_21 0064                         u233_20 006A  
                       u233_21 0069                         u234_20 007E                         u234_21 007D  
                       u235_20 00E9                         u235_21 00E8                  _usart_curbyte 0078  
         __end_of_eeprom_getch 00E2                      ??_getCaps 0076                         saved_w 007E  
              eeprom_getch@loc 0020  __size_of_pseudoRegisters_init 0003                 __pcstackCOMMON 0071  
                   __pbssBANK0 002A                   ?_usart_getch 0071                   ?_usart_putch 0071  
                   __pmaintext 0013                     __pintentry 0004          __size_of_eeprom_getch 000B  
                      _getCaps 008F                        _devcaps 0027                   __size_of_isr 0032  
         end_of_initialization 00F3                   _eeprom_getch 00D7                      _TRISBbits 0086  
         __size_of_usart_getch 000B                     _usart_init 00A8           __size_of_usart_putch 000C  
 __end_of_pseudoRegisters_init 00F9            start_initialization 00ED                    __end_of_isr 008F  
                  __pbssCOMMON 0076                  __pcstackBANK0 0020                      __pnvBANK0 0027  
                  ?_usart_init 0071                      __ptext320 00D7                      __ptext321 005D  
                    __ptext322 00E2                      __ptext323 0000                      __ptext315 00BB  
                    __ptext316 00CB                      __ptext317 008F                      __ptext318 00A8  
                    __ptext319 00F6                       ?_getCaps 0020           _pseudoRegisters_init 00F6  
            interrupt_function 0004                      main@acked 0026            __size_of_usart_init 0013  
        ?_pseudoRegisters_init 0071                   getCaps@devid 0022                usart_putch@byte 0020  
              _usart_curpacket 002A               __size_of_getCaps 0019                  ??_usart_getch 0071  
                ??_usart_putch 0076                  __size_of_main 004A                  __size_of_init 0010  
       ??_pseudoRegisters_init 0076                       intlevel1 0000                   ??_usart_init 0076  
          __end_of_usart_getch 00ED            __end_of_usart_putch 00D7             __end_of_usart_init 00BB  
                ?_eeprom_getch 0071  
