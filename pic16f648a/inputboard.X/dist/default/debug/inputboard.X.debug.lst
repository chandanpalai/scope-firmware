

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Aug 25 21:49:38 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "../main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 46 "../main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_eeprom_getch
    47                           	FNCALL	_main,_getCaps
    48                           	FNCALL	_main,_init
    49                           	FNCALL	_main,_usart_putch
    50                           	FNCALL	_init,_pseudoRegisters_init
    51                           	FNCALL	_init,_usart_init
    52                           	FNROOT	_main
    53                           	FNCALL	_isr,_usart_getch
    54                           	FNCALL	intlevel1,_isr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_usart_curpacket
    58                           	global	_MUX
    59                           	global	_RELAY
    60                           	global	_usart_curbyte
    61                           	global	_devcaps
    62                           psect	nvBANK0,class=BANK0,space=1
    63                           global __pnvBANK0
    64  0027                     __pnvBANK0:
    65  0027                     _devcaps:
    66  0027                            ds      2
    67                           
    68                           	global	_devid
    69  0029                     _devid:
    70  0029                            ds      1
    71                           
    72                           	global	_RCREG
    73  001A                     _RCREG	set	26
    74                           	global	_TXREG
    75  0019                     _TXREG	set	25
    76                           	global	_CARRY
    77  0018                     _CARRY	set	24
    78                           	global	_CREN
    79  00C4                     _CREN	set	196
    80                           	global	_GIE
    81  005F                     _GIE	set	95
    82                           	global	_RCIF
    83  0065                     _RCIF	set	101
    84                           	global	_SPEN
    85  00C7                     _SPEN	set	199
    86                           	global	_TXIF
    87  0064                     _TXIF	set	100
    88                           	global	_SPBRG
    89  0099                     _SPBRG	set	153
    90                           	global	_TRISCbits
    91  0087                     _TRISCbits	set	135
    92                           	global	_BRGH
    93  04C2                     _BRGH	set	1218
    94                           	global	_RCIE
    95  0465                     _RCIE	set	1125
    96                           	global	_SYNC
    97  04C4                     _SYNC	set	1220
    98                           	global	_TXEN
    99  04C5                     _TXEN	set	1221
   100                           	global	_TXIE
   101  0464                     _TXIE	set	1124
   102                           	global	_EEADR
   103  010D                     _EEADR	set	269
   104                           	global	_EEDATA
   105  010C                     _EEDATA	set	268
   106                           	global	_EECON1
   107  018C                     _EECON1	set	396
   108                           	global	_EECON2
   109  018D                     _EECON2	set	397
   110                           	global	_RD
   111  0C60                     _RD	set	3168
   112                           	global	_WR
   113  0C61                     _WR	set	3169
   114                           	global	_WREN
   115  0C62                     _WREN	set	3170
   116                           	file	"C:/DOCUME~1/ali/LOCALS~1/Temp\s20k."
   117                           	line	#
   118                           psect cinit,class=CODE,delta=2
   119                           global start_initialization
   120  0705                     start_initialization:
   121                           
   122                           psect	bssCOMMON,class=COMMON,space=1
   123                           global __pbssCOMMON
   124  0076                     __pbssCOMMON:
   125  0076                     _MUX:
   126  0076                            ds      1
   127                           
   128  0077                     _RELAY:
   129  0077                            ds      1
   130                           
   131  0078                     _usart_curbyte:
   132  0078                            ds      1
   133                           
   134                           psect	bssBANK0,class=BANK0,space=1
   135                           global __pbssBANK0
   136  002A                     __pbssBANK0:
   137  002A                     _usart_curpacket:
   138  002A                            ds      3
   139                           
   140                           ; Clear objects allocated to COMMON
   141                           psect cinit,class=CODE,delta=2
   142  0705  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   143  0706  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   144  0707  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   145                           ; Clear objects allocated to BANK0
   146                           psect cinit,class=CODE,delta=2
   147  0708  01AA               	clrf	((__pbssBANK0)+0)&07Fh
   148  0709  01AB               	clrf	((__pbssBANK0)+1)&07Fh
   149  070A  01AC               	clrf	((__pbssBANK0)+2)&07Fh
   150                           psect cinit,class=CODE,delta=2
   151                           global end_of_initialization
   152                           
   153                           ;End of C runtime variable initialization code
   154                           
   155  070B                     end_of_initialization:
   156  070B  0183               clrf status
   157  070C  120A  118A  2FA9   ljmp _main	;jump to C main() function
   158                           psect	cstackCOMMON,class=COMMON,space=1
   159                           global __pcstackCOMMON
   160  0071                     __pcstackCOMMON:
   161                           	global	?_usart_init
   162  0071                     ?_usart_init:	; 0 bytes @ 0x0
   163                           	global	??_usart_getch
   164  0071                     ??_usart_getch:	; 0 bytes @ 0x0
   165                           	global	?_usart_putch
   166  0071                     ?_usart_putch:	; 0 bytes @ 0x0
   167                           	global	?_pseudoRegisters_init
   168  0071                     ?_pseudoRegisters_init:	; 0 bytes @ 0x0
   169                           	global	?_init
   170  0071                     ?_init:	; 0 bytes @ 0x0
   171                           	global	?_isr
   172  0071                     ?_isr:	; 0 bytes @ 0x0
   173                           	global	??_isr
   174  0071                     ??_isr:	; 0 bytes @ 0x0
   175                           	global	?_main
   176  0071                     ?_main:	; 0 bytes @ 0x0
   177                           	global	?_usart_getch
   178  0071                     ?_usart_getch:	; 1 bytes @ 0x0
   179                           	global	?_eeprom_getch
   180  0071                     ?_eeprom_getch:	; 1 bytes @ 0x0
   181  0071                     	ds	5
   182                           	global	??_usart_init
   183  0076                     ??_usart_init:	; 0 bytes @ 0x5
   184                           	global	??_usart_putch
   185  0076                     ??_usart_putch:	; 0 bytes @ 0x5
   186                           	global	??_eeprom_getch
   187  0076                     ??_eeprom_getch:	; 0 bytes @ 0x5
   188                           	global	??_pseudoRegisters_init
   189  0076                     ??_pseudoRegisters_init:	; 0 bytes @ 0x5
   190                           	global	??_init
   191  0076                     ??_init:	; 0 bytes @ 0x5
   192                           	global	??_getCaps
   193  0076                     ??_getCaps:	; 0 bytes @ 0x5
   194                           psect	cstackBANK0,class=BANK0,space=1
   195                           global __pcstackBANK0
   196  0020                     __pcstackBANK0:
   197                           	global	?_getCaps
   198  0020                     ?_getCaps:	; 2 bytes @ 0x0
   199                           	global	eeprom_getch@loc
   200  0020                     eeprom_getch@loc:	; 1 bytes @ 0x0
   201                           	global	usart_putch@byte
   202  0020                     usart_putch@byte:	; 1 bytes @ 0x0
   203  0020                     	ds	2
   204                           	global	getCaps@devid
   205  0022                     getCaps@devid:	; 1 bytes @ 0x2
   206  0022                     	ds	1
   207                           	global	??_main
   208  0023                     ??_main:	; 0 bytes @ 0x3
   209  0023                     	ds	3
   210                           	global	main@acked
   211  0026                     main@acked:	; 1 bytes @ 0x6
   212  0026                     	ds	1
   213 ;;Data sizes: Strings 0, constant 0, data 0, bss 6, persistent 3 stack 0
   214 ;;Auto spaces:   Size  Autos    Used
   215 ;; COMMON          13      5       8
   216 ;; BANK0           80      7      13
   217 ;; BANK1           80      0       0
   218 ;; BANK3           85      0       0
   219 ;; BANK2           96      0       0
   220                           
   221 ;;
   222 ;; Pointer list with targets:
   223                           
   224                           
   225                           
   226 ;;
   227 ;; Critical Paths under _main in COMMON
   228 ;;
   229 ;;   None.
   230 ;;
   231 ;; Critical Paths under _isr in COMMON
   232 ;;
   233 ;;   None.
   234 ;;
   235 ;; Critical Paths under _main in BANK0
   236 ;;
   237 ;;   _main->_getCaps
   238 ;;
   239 ;; Critical Paths under _isr in BANK0
   240 ;;
   241 ;;   None.
   242 ;;
   243 ;; Critical Paths under _main in BANK1
   244 ;;
   245 ;;   None.
   246 ;;
   247 ;; Critical Paths under _isr in BANK1
   248 ;;
   249 ;;   None.
   250 ;;
   251 ;; Critical Paths under _main in BANK3
   252 ;;
   253 ;;   None.
   254 ;;
   255 ;; Critical Paths under _isr in BANK3
   256 ;;
   257 ;;   None.
   258 ;;
   259 ;; Critical Paths under _main in BANK2
   260 ;;
   261 ;;   None.
   262 ;;
   263 ;; Critical Paths under _isr in BANK2
   264 ;;
   265 ;;   None.
   266                           
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   269 ;;
   270                           
   271 ;;
   272 ;;Call Graph Tables:
   273 ;;
   274 ;; ---------------------------------------------------------------------------------
   275 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   276 ;; ---------------------------------------------------------------------------------
   277 ;; (0) _main                                                 4     4      0     127
   278 ;;                                              3 BANK0      4     4      0
   279 ;;                       _eeprom_getch
   280 ;;                            _getCaps
   281 ;;                               _init
   282 ;;                        _usart_putch
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _init                                                 0     0      0       0
   285 ;;               _pseudoRegisters_init
   286 ;;                         _usart_init
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (1) _usart_putch                                          1     1      0      31
   289 ;;                                              0 BANK0      1     1      0
   290 ;; ---------------------------------------------------------------------------------
   291 ;; (1) _getCaps                                              3     1      2      31
   292 ;;                                              0 BANK0      3     1      2
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (2) _usart_init                                           0     0      0       0
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (2) _pseudoRegisters_init                                 0     0      0       0
   297 ;; ---------------------------------------------------------------------------------
   298 ;; (1) _eeprom_getch                                         1     1      0      31
   299 ;;                                              0 BANK0      1     1      0
   300 ;; ---------------------------------------------------------------------------------
   301 ;; Estimated maximum stack depth 2
   302 ;; ---------------------------------------------------------------------------------
   303 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   304 ;; ---------------------------------------------------------------------------------
   305 ;; (3) _isr                                                  5     5      0       0
   306 ;;                                              0 COMMON     5     5      0
   307 ;;                        _usart_getch
   308 ;; ---------------------------------------------------------------------------------
   309 ;; (4) _usart_getch                                          0     0      0       0
   310 ;; ---------------------------------------------------------------------------------
   311 ;; Estimated maximum stack depth 4
   312 ;; ---------------------------------------------------------------------------------
   313                           
   314 ;; Call Graph Graphs:
   315                           
   316 ;; _main (ROOT)
   317 ;;   _eeprom_getch
   318 ;;   _getCaps
   319 ;;   _init
   320 ;;     _pseudoRegisters_init
   321 ;;     _usart_init
   322 ;;   _usart_putch
   323 ;;
   324 ;; _isr (ROOT)
   325 ;;   _usart_getch
   326 ;;
   327                           
   328 ;; Address spaces:
   329                           
   330 ;;Name               Size   Autos  Total    Cost      Usage
   331 ;;BITCOMMON            D      0       0       0        0.0%
   332 ;;EEDATA             100      0       0       0        0.0%
   333 ;;NULL                 0      0       0       0        0.0%
   334 ;;CODE                 0      0       0       0        0.0%
   335 ;;COMMON               D      5       8       1       61.5%
   336 ;;BITSFR0              0      0       0       1        0.0%
   337 ;;SFR0                 0      0       0       1        0.0%
   338 ;;BITSFR1              0      0       0       2        0.0%
   339 ;;SFR1                 0      0       0       2        0.0%
   340 ;;STACK                0      0       6       2        0.0%
   341 ;;ABS                  0      0      15       3        0.0%
   342 ;;BITBANK0            50      0       0       4        0.0%
   343 ;;BITSFR3              0      0       0       4        0.0%
   344 ;;SFR3                 0      0       0       4        0.0%
   345 ;;BANK0               50      7       D       5       16.3%
   346 ;;BITSFR2              0      0       0       5        0.0%
   347 ;;SFR2                 0      0       0       5        0.0%
   348 ;;BITBANK1            50      0       0       6        0.0%
   349 ;;BANK1               50      0       0       7        0.0%
   350 ;;BITBANK3            55      0       0       8        0.0%
   351 ;;BANK3               55      0       0       9        0.0%
   352 ;;BITBANK2            60      0       0      10        0.0%
   353 ;;BANK2               60      0       0      11        0.0%
   354 ;;DATA                 0      0      1B      12        0.0%
   355                           
   356                           	global	_main
   357                           psect	maintext,global,class=CODE,delta=2
   358                           global __pmaintext
   359  07A9                     __pmaintext:
   360                           
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 109 in file "../main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  acked           1    6[BANK0 ] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;		None               void
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 17F/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       1       0       0       0
   379 ;;      Temps:          0       3       0       0       0
   380 ;;      Totals:         0       4       0       0       0
   381 ;;Total ram usage:        4 bytes
   382 ;; Hardware stack levels required when called:    4
   383 ;; This function calls:
   384 ;;		_eeprom_getch
   385 ;;		_getCaps
   386 ;;		_init
   387 ;;		_usart_putch
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           psect	maintext
   393                           	file	"../main.c"
   394                           	line	109
   395                           	global	__size_of_main
   396  0057                     	__size_of_main	equ	__end_of_main-_main
   397                           	
   398  07A9                     _main:	
   399                           	opt	stack 4
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   401                           	line	110
   402                           	
   403  07A9                     l3798:	
   404                           ;main.c: 110: devid = eeprom_getch(0x00);
   405  07A9  3000               	movlw	(0)
   406  07AA  120A  118A  2726   	fcall	_eeprom_getch
              120A  118A         
   407  07AF  1283               	bcf	status, 5	;RP0=0, select bank0
   408  07B0  1303               	bcf	status, 6	;RP1=0, select bank0
   409  07B1  00A3               	movwf	(??_main+0)+0
   410  07B2  0823               	movf	(??_main+0)+0,w
   411  07B3  00A9               	movwf	(_devid)
   412                           	line	111
   413                           	
   414  07B4                     l3800:	
   415                           ;main.c: 111: devcaps = getCaps(devid);
   416  07B4  0829               	movf	(_devid),w
   417  07B5  120A  118A  275C   	fcall	_getCaps
              120A  118A         
   418  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
   419  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
   420  07BC  0821               	movf	(1+(?_getCaps)),w
   421  07BD  01A8               	clrf	(_devcaps+1)
   422  07BE  07A8               	addwf	(_devcaps+1)
   423  07BF  0820               	movf	(0+(?_getCaps)),w
   424  07C0  01A7               	clrf	(_devcaps)
   425  07C1  07A7               	addwf	(_devcaps)
   426                           
   427                           	line	113
   428                           	
   429  07C2                     l3802:	
   430                           ;main.c: 113: init();
   431  07C2  120A  118A  2748   	fcall	_init
              120A  118A         
   432                           	line	115
   433                           	
   434  07C7                     l3804:	
   435                           ;main.c: 115: if(devcaps & 0x01)
   436  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
   437  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
   438  07C9  1C27               	btfss	(_devcaps),(0)&7
   439  07CA  2FCC               	goto	u2411
   440  07CB  2FCD               	goto	u2410
   441  07CC                     u2411:
   442  07CC  2FFC               	goto	l1187
   443  07CD                     u2410:
   444                           	line	117
   445                           	
   446  07CD                     l3806:	
   447                           ;main.c: 116: {
   448                           ;main.c: 117: unsigned char acked = 0;
   449  07CD  01A6               	clrf	(main@acked)
   450                           	line	118
   451                           ;main.c: 118: while(!acked)
   452  07CE  2FF3               	goto	l3812
   453                           	
   454  07CF                     l1184:	
   455                           	line	120
   456                           	
   457  07CF                     l3808:	
   458                           ;main.c: 119: {
   459                           ;main.c: 120: usart_putch(0x02);
   460  07CF  3002               	movlw	(02h)
   461  07D0  120A  118A  271A   	fcall	_usart_putch
              120A  118A         
   462                           	line	121
   463                           ;main.c: 121: usart_putch(devid);
   464  07D5  1283               	bcf	status, 5	;RP0=0, select bank0
   465  07D6  1303               	bcf	status, 6	;RP1=0, select bank0
   466  07D7  0829               	movf	(_devid),w
   467  07D8  120A  118A  271A   	fcall	_usart_putch
              120A  118A         
   468                           	line	122
   469                           ;main.c: 122: usart_putch(0x00);
   470  07DD  3000               	movlw	(0)
   471  07DE  120A  118A  271A   	fcall	_usart_putch
              120A  118A         
   472                           	line	123
   473                           	
   474  07E3                     l3810:	
   475                           ;main.c: 123: _delay((unsigned long)((100)*(20000000/4000.0)));
   476                           	opt asmopt_off
   477  07E3  3003               movlw  3
   478  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
   479  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
   480  07E6  00A5               movwf	((??_main+0)+0+2),f
   481  07E7  308A               movlw	138
   482  07E8  00A4               movwf	((??_main+0)+0+1),f
   483  07E9  3056               	movlw	86
   484  07EA  00A3               movwf	((??_main+0)+0),f
   485  07EB                     u2437:
   486  07EB  0BA3               	decfsz	((??_main+0)+0),f
   487  07EC  2FEB               	goto	u2437
   488  07ED  0BA4               	decfsz	((??_main+0)+0+1),f
   489  07EE  2FEB               	goto	u2437
   490  07EF  0BA5               	decfsz	((??_main+0)+0+2),f
   491  07F0  2FEB               	goto	u2437
   492  07F1  2FF2               	nop2
   493                           opt asmopt_on
   494                           
   495  07F2  2FF3               	goto	l3812
   496                           	line	124
   497                           	
   498  07F3                     l1183:	
   499                           	line	118
   500                           	
   501  07F3                     l3812:	
   502  07F3  1283               	bcf	status, 5	;RP0=0, select bank0
   503  07F4  1303               	bcf	status, 6	;RP1=0, select bank0
   504  07F5  0826               	movf	(main@acked),w
   505  07F6  1D03               	skipz
   506  07F7  2FF9               	goto	u2420
   507  07F8  2FCF               	goto	l3808
   508  07F9                     u2420:
   509  07F9  2FFC               	goto	l1187
   510                           	
   511  07FA                     l1185:	
   512  07FA  2FFC               	goto	l1187
   513                           	line	125
   514                           	
   515  07FB                     l1182:	
   516  07FB  2FFC               	goto	l1187
   517                           	line	127
   518                           ;main.c: 124: }
   519                           ;main.c: 125: }
   520                           ;main.c: 127: while(1)
   521                           	
   522  07FC                     l1186:	
   523                           	line	130
   524                           ;main.c: 128: {
   525                           	
   526  07FC                     l1187:	
   527                           	line	127
   528  07FC  2FFC               	goto	l1187
   529                           	
   530  07FD                     l1188:	
   531                           	line	131
   532                           	
   533  07FD                     l1189:	
   534                           	global	start
   535  07FD  120A  118A  2812   	ljmp	start
   536                           	opt stack 0
   537                           GLOBAL	__end_of_main
   538  0800                     	__end_of_main:
   539 ;; =============== function _main ends ============
   540                           
   541                           	signat	_main,88
   542                           	global	_init
   543                           psect	text315,local,class=CODE,delta=2
   544                           global __ptext315
   545  0748                     __ptext315:
   546                           
   547 ;; *************** function _init *****************
   548 ;; Defined at:
   549 ;;		line 58 in file "../main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;		None               void
   556 ;; Registers used:
   557 ;;		status,2, status,0, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    3
   570 ;; This function calls:
   571 ;;		_pseudoRegisters_init
   572 ;;		_usart_init
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           psect	text315
   578                           	file	"../main.c"
   579                           	line	58
   580                           	global	__size_of_init
   581  0014                     	__size_of_init	equ	__end_of_init-_init
   582                           	
   583  0748                     _init:	
   584                           	opt	stack 4
   585                           ; Regs used in _init: [status,2+status,0+pclath+cstack]
   586                           	line	59
   587                           	
   588  0748                     l3744:	
   589                           ;main.c: 59: pseudoRegisters_init();
   590  0748  120A  118A  2702   	fcall	_pseudoRegisters_init
              120A  118A         
   591                           	line	61
   592                           	
   593  074D                     l3746:	
   594                           ;main.c: 61: GIE = 1;
   595  074D  178B               	bsf	(95/8),(95)&7
   596                           	line	63
   597                           	
   598  074E                     l3748:	
   599                           ;main.c: 63: usart_curbyte = 0;
   600  074E  01F8               	clrf	(_usart_curbyte)
   601                           	line	65
   602                           	
   603  074F                     l3750:	
   604                           ;main.c: 65: if(devcaps & 0x01)
   605  074F  1283               	bcf	status, 5	;RP0=0, select bank0
   606  0750  1303               	bcf	status, 6	;RP1=0, select bank0
   607  0751  1C27               	btfss	(_devcaps),(0)&7
   608  0752  2F54               	goto	u2371
   609  0753  2F55               	goto	u2370
   610  0754                     u2371:
   611  0754  2F5B               	goto	l1164
   612  0755                     u2370:
   613                           	line	66
   614                           	
   615  0755                     l3752:	
   616                           ;main.c: 66: usart_init();
   617  0755  120A  118A  2735   	fcall	_usart_init
              120A  118A         
   618  075A  2F5B               	goto	l1164
   619                           	
   620  075B                     l1163:	
   621                           	line	67
   622                           	
   623  075B                     l1164:	
   624  075B  0008               	return
   625                           	opt stack 0
   626                           GLOBAL	__end_of_init
   627  075C                     	__end_of_init:
   628 ;; =============== function _init ends ============
   629                           
   630                           	signat	_init,88
   631                           	global	_usart_putch
   632                           psect	text316,local,class=CODE,delta=2
   633                           global __ptext316
   634  071A                     __ptext316:
   635                           
   636 ;; *************** function _usart_putch *****************
   637 ;; Defined at:
   638 ;;		line 28 in file "../usart.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  byte            1    wreg     unsigned char 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  byte            1    0[BANK0 ] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;		None               void
   645 ;; Registers used:
   646 ;;		wreg
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       1       0       0       0
   654 ;;      Temps:          0       0       0       0       0
   655 ;;      Totals:         0       1       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    2
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           psect	text316
   666                           	file	"../usart.c"
   667                           	line	28
   668                           	global	__size_of_usart_putch
   669  000C                     	__size_of_usart_putch	equ	__end_of_usart_putch-_usart_putch
   670                           	
   671  071A                     _usart_putch:	
   672                           	opt	stack 5
   673                           ; Regs used in _usart_putch: [wreg]
   674                           ;usart_putch@byte stored from wreg
   675  071A  1283               	bcf	status, 5	;RP0=0, select bank0
   676  071B  1303               	bcf	status, 6	;RP1=0, select bank0
   677  071C  00A0               	movwf	(usart_putch@byte)
   678                           	line	30
   679                           	
   680  071D                     l3794:	
   681                           ;usart.c: 30: while(!TXIF)
   682  071D  2F1E               	goto	l1765
   683                           	
   684  071E                     l1766:	
   685                           	line	31
   686                           ;usart.c: 31: continue;
   687                           	
   688  071E                     l1765:	
   689                           	line	30
   690  071E  1E0C               	btfss	(100/8),(100)&7
   691  071F  2F21               	goto	u2401
   692  0720  2F22               	goto	u2400
   693  0721                     u2401:
   694  0721  2F1E               	goto	l1765
   695  0722                     u2400:
   696  0722  2F23               	goto	l3796
   697                           	
   698  0723                     l1767:	
   699                           	line	32
   700                           	
   701  0723                     l3796:	
   702                           ;usart.c: 32: TXREG = byte;
   703  0723  0820               	movf	(usart_putch@byte),w
   704  0724  0099               	movwf	(25)	;volatile
   705                           	line	33
   706                           	
   707  0725                     l1768:	
   708  0725  0008               	return
   709                           	opt stack 0
   710                           GLOBAL	__end_of_usart_putch
   711  0726                     	__end_of_usart_putch:
   712 ;; =============== function _usart_putch ends ============
   713                           
   714                           	signat	_usart_putch,4216
   715                           	global	_getCaps
   716                           psect	text317,local,class=CODE,delta=2
   717                           global __ptext317
   718  075C                     __ptext317:
   719                           
   720 ;; *************** function _getCaps *****************
   721 ;; Defined at:
   722 ;;		line 94 in file "../main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  devid           1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  devid           1    2[BANK0 ] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  2    0[BANK0 ] int 
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       2       0       0       0
   737 ;;      Locals:         0       1       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       3       0       0       0
   740 ;;Total ram usage:        3 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    2
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           psect	text317
   750                           	file	"../main.c"
   751                           	line	94
   752                           	global	__size_of_getCaps
   753  0019                     	__size_of_getCaps	equ	__end_of_getCaps-_getCaps
   754                           	
   755  075C                     _getCaps:	
   756                           	opt	stack 5
   757                           ; Regs used in _getCaps: [wreg-fsr0h+status,2+status,0]
   758                           ;getCaps@devid stored from wreg
   759  075C  1283               	bcf	status, 5	;RP0=0, select bank0
   760  075D  1303               	bcf	status, 6	;RP1=0, select bank0
   761  075E  00A2               	movwf	(getCaps@devid)
   762                           	line	95
   763                           	
   764  075F                     l3776:	
   765                           ;main.c: 95: switch(devid)
   766  075F  2F6C               	goto	l3792
   767                           	line	97
   768                           ;main.c: 96: {
   769                           ;main.c: 97: case 0xA0:
   770                           	
   771  0760                     l1175:	
   772                           	line	98
   773                           	
   774  0760                     l3778:	
   775                           ;main.c: 98: return 0x01 & 0x04 & (0x10 & 0x20 & 0x30);
   776  0760  01A0               	clrf	(?_getCaps)
   777  0761  01A1               	clrf	(?_getCaps+1)
   778  0762  2F74               	goto	l1176
   779                           	
   780  0763                     l3780:	
   781  0763  2F74               	goto	l1176
   782                           	line	99
   783                           	
   784  0764                     l3782:	
   785                           ;main.c: 99: break;
   786  0764  2F74               	goto	l1176
   787                           	line	100
   788                           ;main.c: 100: case 0xA2:
   789                           	
   790  0765                     l1178:	
   791                           	line	101
   792                           	
   793  0765                     l3784:	
   794                           ;main.c: 101: return 0x01 & 0x02 & 0x04 & 0x08 & ((0x10 & 0x20 & 0x30) & 0x40);
   795  0765  01A0               	clrf	(?_getCaps)
   796  0766  01A1               	clrf	(?_getCaps+1)
   797  0767  2F74               	goto	l1176
   798                           	
   799  0768                     l3786:	
   800  0768  2F74               	goto	l1176
   801                           	line	102
   802                           	
   803  0769                     l3788:	
   804                           ;main.c: 102: break;
   805  0769  2F74               	goto	l1176
   806                           	line	103
   807                           ;main.c: 103: default:
   808                           	
   809  076A                     l1179:	
   810                           	line	104
   811                           ;main.c: 104: break;
   812  076A  2F74               	goto	l1176
   813                           	line	105
   814                           	
   815  076B                     l3790:	
   816                           ;main.c: 105: }
   817  076B  2F74               	goto	l1176
   818                           	line	95
   819                           	
   820  076C                     l1174:	
   821                           	
   822  076C                     l3792:	
   823  076C  0822               	movf	(getCaps@devid),w
   824                           	; Switch size 1, requested type "space"
   825                           ; Number of cases is 2, Range of values is 160 to 162
   826                           ; switch strategies available:
   827                           ; Name         Instructions Cycles
   828                           ; simple_byte            7     4 (average)
   829                           ; direct_byte           20    11 (fixed)
   830                           ; jumptable            263     9 (fixed)
   831                           ;	Chosen strategy is simple_byte
   832                           
   833                           	opt asmopt_off
   834  076D  3AA0               	xorlw	160^0	; case 160
   835  076E  1903               	skipnz
   836  076F  2F60               	goto	l3778
   837  0770  3A02               	xorlw	162^160	; case 162
   838  0771  1903               	skipnz
   839  0772  2F65               	goto	l3784
   840  0773  2F74               	goto	l1176
   841                           	opt asmopt_on
   842                           
   843                           	line	105
   844                           	
   845  0774                     l1177:	
   846                           	line	106
   847                           	
   848  0774                     l1176:	
   849  0774  0008               	return
   850                           	opt stack 0
   851                           GLOBAL	__end_of_getCaps
   852  0775                     	__end_of_getCaps:
   853 ;; =============== function _getCaps ends ============
   854                           
   855                           	signat	_getCaps,4218
   856                           	global	_usart_init
   857                           psect	text318,local,class=CODE,delta=2
   858                           global __ptext318
   859  0735                     __ptext318:
   860                           
   861 ;; *************** function _usart_init *****************
   862 ;; Defined at:
   863 ;;		line 7 in file "../usart.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;		None               void
   870 ;; Registers used:
   871 ;;		status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    2
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_init
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           psect	text318
   891                           	file	"../usart.c"
   892                           	line	7
   893                           	global	__size_of_usart_init
   894  0013                     	__size_of_usart_init	equ	__end_of_usart_init-_usart_init
   895                           	
   896  0735                     _usart_init:	
   897                           	opt	stack 4
   898                           ; Regs used in _usart_init: [status,2]
   899                           	line	9
   900                           	
   901  0735                     l3684:	
   902                           ;usart.c: 9: TRISCbits.TRISC7 = 1;
   903  0735  1683               	bsf	status, 5	;RP0=1, select bank1
   904  0736  1303               	bcf	status, 6	;RP1=0, select bank1
   905  0737  1787               	bsf	(135)^080h,7	;volatile
   906                           	line	10
   907                           ;usart.c: 10: TRISCbits.TRISC6 = 1;
   908  0738  1707               	bsf	(135)^080h,6	;volatile
   909                           	line	12
   910                           	
   911  0739                     l3686:	
   912                           ;usart.c: 12: SPBRG = 0;
   913  0739  0199               	clrf	(153)^080h	;volatile
   914                           	line	14
   915                           	
   916  073A                     l3688:	
   917                           ;usart.c: 14: BRGH = 1;
   918  073A  1518               	bsf	(1218/8)^080h,(1218)&7
   919                           	line	15
   920                           	
   921  073B                     l3690:	
   922                           ;usart.c: 15: SYNC = 0;
   923  073B  1218               	bcf	(1220/8)^080h,(1220)&7
   924                           	line	16
   925                           	
   926  073C                     l3692:	
   927                           ;usart.c: 16: SPEN = 1;
   928  073C  1283               	bcf	status, 5	;RP0=0, select bank0
   929  073D  1303               	bcf	status, 6	;RP1=0, select bank0
   930  073E  1798               	bsf	(199/8),(199)&7
   931                           	line	18
   932                           	
   933  073F                     l3694:	
   934                           ;usart.c: 18: TXIE = 1;
   935  073F  1683               	bsf	status, 5	;RP0=1, select bank1
   936  0740  1303               	bcf	status, 6	;RP1=0, select bank1
   937  0741  160C               	bsf	(1124/8)^080h,(1124)&7
   938                           	line	19
   939                           	
   940  0742                     l3696:	
   941                           ;usart.c: 19: TXEN = 1;
   942  0742  1698               	bsf	(1221/8)^080h,(1221)&7
   943                           	line	21
   944                           	
   945  0743                     l3698:	
   946                           ;usart.c: 21: RCIE = 1;
   947  0743  168C               	bsf	(1125/8)^080h,(1125)&7
   948                           	line	22
   949                           	
   950  0744                     l3700:	
   951                           ;usart.c: 22: CREN = 1;
   952  0744  1283               	bcf	status, 5	;RP0=0, select bank0
   953  0745  1303               	bcf	status, 6	;RP1=0, select bank0
   954  0746  1618               	bsf	(196/8),(196)&7
   955                           	line	24
   956                           	
   957  0747                     l1762:	
   958  0747  0008               	return
   959                           	opt stack 0
   960                           GLOBAL	__end_of_usart_init
   961  0748                     	__end_of_usart_init:
   962 ;; =============== function _usart_init ends ============
   963                           
   964                           	signat	_usart_init,88
   965                           	global	_pseudoRegisters_init
   966                           psect	text319,local,class=CODE,delta=2
   967                           global __ptext319
   968  0702                     __ptext319:
   969                           
   970 ;; *************** function _pseudoRegisters_init *****************
   971 ;; Defined at:
   972 ;;		line 61 in file "../input.h"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;		None               void
   979 ;; Registers used:
   980 ;;		None
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         0       0       0       0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    2
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_init
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           psect	text319
  1000                           	file	"../input.h"
  1001                           	line	61
  1002                           	global	__size_of_pseudoRegisters_init
  1003  0003                     	__size_of_pseudoRegisters_init	equ	__end_of_pseudoRegisters_init-_pseudoRegisters_init
  1004                           	
  1005  0702                     _pseudoRegisters_init:	
  1006                           	opt	stack 4
  1007                           ; Regs used in _pseudoRegisters_init: []
  1008                           	line	62
  1009                           	
  1010  0702                     l3682:	
  1011                           ;input.h: 62: RELAY = 0x00;
  1012  0702  01F7               	clrf	(_RELAY)
  1013                           	line	63
  1014                           ;input.h: 63: MUX = 0x00;
  1015  0703  01F6               	clrf	(_MUX)
  1016                           	line	64
  1017                           	
  1018  0704                     l1160:	
  1019  0704  0008               	return
  1020                           	opt stack 0
  1021                           GLOBAL	__end_of_pseudoRegisters_init
  1022  0705                     	__end_of_pseudoRegisters_init:
  1023 ;; =============== function _pseudoRegisters_init ends ============
  1024                           
  1025                           	signat	_pseudoRegisters_init,88
  1026                           	global	_eeprom_getch
  1027                           psect	text320,local,class=CODE,delta=2
  1028                           global __ptext320
  1029  0726                     __ptext320:
  1030                           
  1031 ;; *************** function _eeprom_getch *****************
  1032 ;; Defined at:
  1033 ;;		line 42 in file "../eeprom.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  loc             1    wreg     unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  loc             1    0[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       1       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         0       1       0       0       0
  1051 ;;Total ram usage:        1 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    2
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           psect	text320
  1061                           	file	"../eeprom.c"
  1062                           	line	42
  1063                           	global	__size_of_eeprom_getch
  1064  000F                     	__size_of_eeprom_getch	equ	__end_of_eeprom_getch-_eeprom_getch
  1065                           	
  1066  0726                     _eeprom_getch:	
  1067                           	opt	stack 5
  1068                           ; Regs used in _eeprom_getch: [wreg]
  1069                           ;eeprom_getch@loc stored from wreg
  1070  0726  1283               	bcf	status, 5	;RP0=0, select bank0
  1071  0727  1303               	bcf	status, 6	;RP1=0, select bank0
  1072  0728  00A0               	movwf	(eeprom_getch@loc)
  1073                           	line	43
  1074                           	
  1075  0729                     l3770:	
  1076                           ;eeprom.c: 43: EEADR = loc;
  1077  0729  0820               	movf	(eeprom_getch@loc),w
  1078  072A  1283               	bcf	status, 5	;RP0=0, select bank2
  1079  072B  1703               	bsf	status, 6	;RP1=1, select bank2
  1080  072C  008D               	movwf	(269)^0100h	;volatile
  1081                           	line	44
  1082                           	
  1083  072D                     l3772:	
  1084                           ;eeprom.c: 44: RD = 1;
  1085  072D  1683               	bsf	status, 5	;RP0=1, select bank3
  1086  072E  1703               	bsf	status, 6	;RP1=1, select bank3
  1087  072F  140C               	bsf	(3168/8)^0180h,(3168)&7
  1088                           	line	45
  1089                           ;eeprom.c: 45: return EEDATA;
  1090  0730  1283               	bcf	status, 5	;RP0=0, select bank2
  1091  0731  1703               	bsf	status, 6	;RP1=1, select bank2
  1092  0732  080C               	movf	(268)^0100h,w	;volatile
  1093  0733  2F34               	goto	l569
  1094                           	
  1095  0734                     l3774:	
  1096                           	line	46
  1097                           	
  1098  0734                     l569:	
  1099  0734  0008               	return
  1100                           	opt stack 0
  1101                           GLOBAL	__end_of_eeprom_getch
  1102  0735                     	__end_of_eeprom_getch:
  1103 ;; =============== function _eeprom_getch ends ============
  1104                           
  1105                           	signat	_eeprom_getch,4217
  1106                           	global	_isr
  1107                           psect	text321,local,class=CODE,delta=2
  1108                           global __ptext321
  1109  0775                     __ptext321:
  1110                           
  1111 ;; *************** function _isr *****************
  1112 ;; Defined at:
  1113 ;;		line 70 in file "../main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;		None               void
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          5       0       0       0       0
  1130 ;;      Totals:         5       0       0       0       0
  1131 ;;Total ram usage:        5 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    1
  1134 ;; This function calls:
  1135 ;;		_usart_getch
  1136 ;; This function is called by:
  1137 ;;		Interrupt level 1
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           psect	text321
  1141                           	file	"../main.c"
  1142                           	line	70
  1143                           	global	__size_of_isr
  1144  0034                     	__size_of_isr	equ	__end_of_isr-_isr
  1145                           	
  1146  0775                     _isr:	
  1147                           	opt	stack 4
  1148                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1149                           psect	intentry,class=CODE,delta=2
  1150                           global __pintentry
  1151  0004                     __pintentry:
  1152                           global interrupt_function
  1153  0004                     interrupt_function:
  1154                           	global saved_w
  1155  007E                     	saved_w	set	btemp+0
  1156  0004  00FE               	movwf	saved_w
  1157  0005  0E03               	swapf	status,w
  1158  0006  00F2               	movwf	(??_isr+1)
  1159  0007  0804               	movf	fsr0,w
  1160  0008  00F3               	movwf	(??_isr+2)
  1161  0009  080A               	movf	pclath,w
  1162  000A  00F4               	movwf	(??_isr+3)
  1163  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1164  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1165  000D  087F               	movf	btemp+1,w
  1166  000E  00F5               	movwf	(??_isr+4)
  1167  000F  120A  118A  2F75   	ljmp	_isr
  1168                           psect	text321
  1169                           	line	71
  1170                           	
  1171  0775                     i1l3702:	
  1172                           ;main.c: 71: if(devcaps & 0x01)
  1173  0775  1C27               	btfss	(_devcaps),(0)&7
  1174  0776  2F78               	goto	u231_21
  1175  0777  2F79               	goto	u231_20
  1176  0778                     u231_21:
  1177  0778  2F9E               	goto	i1l1171
  1178  0779                     u231_20:
  1179                           	line	73
  1180                           	
  1181  0779                     i1l3704:	
  1182                           ;main.c: 72: {
  1183                           ;main.c: 73: if(TXIF)
  1184  0779  1E0C               	btfss	(100/8),(100)&7
  1185  077A  2F7C               	goto	u232_21
  1186  077B  2F7D               	goto	u232_20
  1187  077C                     u232_21:
  1188  077C  2F7E               	goto	i1l1168
  1189  077D                     u232_20:
  1190                           	line	75
  1191                           	
  1192  077D                     i1l3706:	
  1193                           ;main.c: 74: {
  1194                           ;main.c: 75: TXIF = 0;
  1195  077D  120C               	bcf	(100/8),(100)&7
  1196                           	line	76
  1197                           	
  1198  077E                     i1l1168:	
  1199                           	line	77
  1200                           ;main.c: 76: }
  1201                           ;main.c: 77: if(RCIF)
  1202  077E  1E8C               	btfss	(101/8),(101)&7
  1203  077F  2F81               	goto	u233_21
  1204  0780  2F82               	goto	u233_20
  1205  0781                     u233_21:
  1206  0781  2F9E               	goto	i1l1171
  1207  0782                     u233_20:
  1208                           	line	80
  1209                           	
  1210  0782                     i1l3708:	
  1211                           ;main.c: 78: {
  1212                           ;main.c: 80: usart_curpacket[usart_curbyte] = usart_getch();
  1213  0782  120A  118A  270F   	fcall	_usart_getch
              120A  118A         
  1214  0787  00F1               	movwf	(??_isr+0)+0
  1215  0788  0878               	movf	(_usart_curbyte),w
  1216  0789  3E2A               	addlw	_usart_curpacket&0ffh
  1217  078A  0084               	movwf	fsr0
  1218  078B  0871               	movf	(??_isr+0)+0,w
  1219  078C  1383               	bcf	status, 7	;select IRP bank0
  1220  078D  0080               	movwf	indf
  1221                           	line	81
  1222                           	
  1223  078E                     i1l3710:	
  1224                           ;main.c: 81: usart_curbyte++;
  1225  078E  3001               	movlw	(01h)
  1226  078F  00F1               	movwf	(??_isr+0)+0
  1227  0790  0871               	movf	(??_isr+0)+0,w
  1228  0791  07F8               	addwf	(_usart_curbyte),f
  1229                           	line	82
  1230                           	
  1231  0792                     i1l3712:	
  1232                           ;main.c: 82: if(usart_curbyte == 3)
  1233  0792  0878               	movf	(_usart_curbyte),w
  1234  0793  3A03               	xorlw	03h
  1235  0794  1D03               	skipz
  1236  0795  2F97               	goto	u234_21
  1237  0796  2F98               	goto	u234_20
  1238  0797                     u234_21:
  1239  0797  2F99               	goto	i1l1170
  1240  0798                     u234_20:
  1241                           	line	85
  1242                           	
  1243  0798                     i1l3714:	
  1244                           ;main.c: 83: {
  1245                           ;main.c: 85: usart_curbyte = 0;
  1246  0798  01F8               	clrf	(_usart_curbyte)
  1247                           	line	86
  1248                           	
  1249  0799                     i1l1170:	
  1250                           	line	88
  1251                           ;main.c: 86: }
  1252                           ;main.c: 88: RCIF = 0;
  1253  0799  1283               	bcf	status, 5	;RP0=0, select bank0
  1254  079A  1303               	bcf	status, 6	;RP1=0, select bank0
  1255  079B  128C               	bcf	(101/8),(101)&7
  1256  079C  2F9E               	goto	i1l1171
  1257                           	line	89
  1258                           	
  1259  079D                     i1l1169:	
  1260  079D  2F9E               	goto	i1l1171
  1261                           	line	90
  1262                           	
  1263  079E                     i1l1167:	
  1264                           	line	91
  1265                           	
  1266  079E                     i1l1171:	
  1267  079E  0875               	movf	(??_isr+4),w
  1268  079F  00FF               	movwf	btemp+1
  1269  07A0  0874               	movf	(??_isr+3),w
  1270  07A1  008A               	movwf	pclath
  1271  07A2  0873               	movf	(??_isr+2),w
  1272  07A3  0084               	movwf	fsr0
  1273  07A4  0E72               	swapf	(??_isr+1)^0FFFFFF80h,w
  1274  07A5  0083               	movwf	status
  1275  07A6  0EFE               	swapf	saved_w,f
  1276  07A7  0E7E               	swapf	saved_w,w
  1277  07A8  0009               	retfie
  1278                           	opt stack 0
  1279                           GLOBAL	__end_of_isr
  1280  07A9                     	__end_of_isr:
  1281 ;; =============== function _isr ends ============
  1282                           
  1283                           	signat	_isr,88
  1284                           	global	_usart_getch
  1285                           psect	text322,local,class=CODE,delta=2
  1286                           global __ptext322
  1287  070F                     __ptext322:
  1288                           
  1289 ;; *************** function _usart_getch *****************
  1290 ;; Defined at:
  1291 ;;		line 36 in file "../usart.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      unsigned char 
  1298 ;; Registers used:
  1299 ;;		wreg
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_isr
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           psect	text322
  1318                           	file	"../usart.c"
  1319                           	line	36
  1320                           	global	__size_of_usart_getch
  1321  000B                     	__size_of_usart_getch	equ	__end_of_usart_getch-_usart_getch
  1322                           	
  1323  070F                     _usart_getch:	
  1324                           	opt	stack 4
  1325                           ; Regs used in _usart_getch: [wreg]
  1326                           	line	38
  1327                           	
  1328  070F                     i1l3716:	
  1329                           ;usart.c: 38: while(!RCIF)
  1330  070F  2F10               	goto	i1l1771
  1331                           	
  1332  0710                     i1l1772:	
  1333                           	line	39
  1334                           ;usart.c: 39: continue;
  1335                           	
  1336  0710                     i1l1771:	
  1337                           	line	38
  1338  0710  1283               	bcf	status, 5	;RP0=0, select bank0
  1339  0711  1303               	bcf	status, 6	;RP1=0, select bank0
  1340  0712  1E8C               	btfss	(101/8),(101)&7
  1341  0713  2F15               	goto	u235_21
  1342  0714  2F16               	goto	u235_20
  1343  0715                     u235_21:
  1344  0715  2F10               	goto	i1l1771
  1345  0716                     u235_20:
  1346  0716  2F17               	goto	i1l3718
  1347                           	
  1348  0717                     i1l1773:	
  1349                           	line	40
  1350                           	
  1351  0717                     i1l3718:	
  1352                           ;usart.c: 40: return RCREG;
  1353  0717  081A               	movf	(26),w	;volatile
  1354  0718  2F19               	goto	i1l1774
  1355                           	
  1356  0719                     i1l3720:	
  1357                           	line	41
  1358                           	
  1359  0719                     i1l1774:	
  1360  0719  0008               	return
  1361                           	opt stack 0
  1362                           GLOBAL	__end_of_usart_getch
  1363  071A                     	__end_of_usart_getch:
  1364 ;; =============== function _usart_getch ends ============
  1365                           
  1366                           	signat	_usart_getch,89
  1367                           psect	text323,local,class=CODE,delta=2
  1368                           global __ptext323
  1369  0000                     __ptext323:
  1370                           	global	btemp
  1371  007E                     	btemp set 07Eh
  1372                           
  1373                           	DABS	1,126,2	;btemp
  1374                           	global	wtemp0
  1375  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Aug 25 21:49:38 2011

                           _RD 0C60                             _WR 0C61                            l569 0734  
                          _GIE 005F                            _MUX 0076                            _isr 0775  
                          fsr0 0004                            indf 0000                 ??_eeprom_getch 0076  
                         l1160 0704                           l1163 075B                           l1164 075B  
                         l1174 076C                           l1182 07FB                           l1175 0760  
                         l1183 07F3                           l1176 0774                           l1184 07CF  
                         l1177 0774                           l1185 07FA                           l1178 0765  
                         l1186 07FC                           l1179 076A                           l1187 07FC  
                         l1188 07FD                           l1189 07FD                           l1762 0747  
                         l3700 0744                           l1765 071E                           l1766 071E  
                         l1767 0723                           l1768 0725                           l3800 07B4  
                         l3810 07E3                           l3802 07C2                           l3812 07F3  
                         l3804 07C7                           l3750 074F                           l3806 07CD  
                         l3752 0755                           l3744 0748                           l3808 07CF  
                         l3770 0729                           l3682 0702                           l3690 073B  
                         l3746 074D                           l3772 072D                           l3692 073C  
                         l3684 0735                           l3780 0763                           l3748 074E  
                         l3774 0734                           l3694 073F                           l3686 0739  
                         l3790 076B                           l3782 0764                           l3696 0742  
                         l3688 073A                           l3784 0765                           l3792 076C  
                         l3776 075F                           l3698 0743                           l3786 0768  
                         l3778 0760                           l3794 071D                           l3788 0769  
                         l3796 0723                           l3798 07A9                           ?_isr 0071  
                         _BRGH 04C2                           _CREN 00C4                           u2400 0722  
                         u2401 0721                           u2410 07CD                           u2411 07CC  
                         u2420 07F9                           u2370 0755                           u2371 0754  
                         u2437 07EB                           _RCIE 0465                           _RCIF 0065  
                         _SPEN 00C7                           _TXIE 0464                           _WREN 0C62  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                  _usart_getch 070F                           _main 07A9                           _init 0748  
                  _usart_putch 071A                           btemp 007E                           start 0012  
                        ??_isr 0071                          ?_main 0071                          ?_init 0071  
                        _EEADR 010D                          _CARRY 0018                          _RCREG 001A  
                        _RELAY 0077                          _SPBRG 0099                          _TXREG 0019  
              __end_of_getCaps 0775                          _devid 0029                          pclath 000A  
                        status 0003                          wtemp0 007E                   __end_of_main 0800  
                 __end_of_init 075C                         ??_main 0023                         ??_init 0076  
                       _EEDATA 010C                         _EECON1 018C                         _EECON2 018D  
                       i1l1170 0799                         i1l1171 079E                         i1l1167 079E  
                       i1l1168 077E                         i1l1169 079D                         i1l1771 0710  
                       i1l1772 0710                         i1l1773 0717                         i1l1774 0719  
                       i1l3710 078E                         i1l3702 0775                         i1l3720 0719  
                       i1l3712 0792                         i1l3704 0779                         i1l3714 0798  
                       i1l3706 077D                         i1l3716 070F                         i1l3708 0782  
                       i1l3718 0717                         u231_20 0779                         u231_21 0778  
                       u232_20 077D                         u232_21 077C                         u233_20 0782  
                       u233_21 0781                         u234_20 0798                         u234_21 0797  
                       u235_20 0716                         u235_21 0715                  _usart_curbyte 0078  
         __end_of_eeprom_getch 0735                      ??_getCaps 0076                         saved_w 007E  
              eeprom_getch@loc 0020  __size_of_pseudoRegisters_init 0003                 __pcstackCOMMON 0071  
                   __pbssBANK0 002A                   ?_usart_getch 0071                   ?_usart_putch 0071  
                   __pmaintext 07A9                     __pintentry 0004          __size_of_eeprom_getch 000F  
                      _getCaps 075C                        _devcaps 0027                   __size_of_isr 0034  
         end_of_initialization 070B                   _eeprom_getch 0726                      _TRISCbits 0087  
         __size_of_usart_getch 000B                     _usart_init 0735           __size_of_usart_putch 000C  
 __end_of_pseudoRegisters_init 0705            start_initialization 0705                    __end_of_isr 07A9  
                  __pbssCOMMON 0076                  __pcstackBANK0 0020                      __pnvBANK0 0027  
                  ?_usart_init 0071                      __ptext320 0726                      __ptext321 0775  
                    __ptext322 070F                      __ptext323 0000                      __ptext315 0748  
                    __ptext316 071A                      __ptext317 075C                      __ptext318 0735  
                    __ptext319 0702                       ?_getCaps 0020           _pseudoRegisters_init 0702  
            interrupt_function 0004                      main@acked 0026            __size_of_usart_init 0013  
        ?_pseudoRegisters_init 0071                   getCaps@devid 0022                usart_putch@byte 0020  
              _usart_curpacket 002A               __size_of_getCaps 0019                  ??_usart_getch 0071  
                ??_usart_putch 0076                  __size_of_main 0057                  __size_of_init 0014  
       ??_pseudoRegisters_init 0076                       intlevel1 0000                   ??_usart_init 0076  
          __end_of_usart_getch 071A            __end_of_usart_putch 0726             __end_of_usart_init 0748  
                ?_eeprom_getch 0071  
