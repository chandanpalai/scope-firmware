

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Aug 25 21:38:03 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "../main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 46 "../main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_eeprom_getch
    47                           	FNCALL	_main,_getCaps
    48                           	FNCALL	_main,_init
    49                           	FNCALL	_main,_usart_putch
    50                           	FNCALL	_init,_pseudoRegisters_init
    51                           	FNCALL	_init,_usart_init
    52                           	FNROOT	_main
    53                           	FNCALL	_isr,_usart_getch
    54                           	FNCALL	intlevel1,_isr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_usart_curpacket
    58                           	global	_MUX
    59                           	global	_RELAY
    60                           	global	_usart_curbyte
    61                           	global	_devid
    62                           psect	nvBANK0,class=BANK0,space=1
    63                           global __pnvBANK0
    64  002A                     __pnvBANK0:
    65  002A                     _devid:
    66  002A                            ds      1
    67                           
    68                           	global	_devcaps
    69                           psect	nvCOMMON,class=COMMON,space=1
    70                           global __pnvCOMMON
    71  0078                     __pnvCOMMON:
    72  0078                     _devcaps:
    73  0078                            ds      2
    74                           
    75                           	global	_RCREG
    76  001A                     _RCREG	set	26
    77                           	global	_TXREG
    78  0019                     _TXREG	set	25
    79                           	global	_CARRY
    80  0018                     _CARRY	set	24
    81                           	global	_CREN
    82  00C4                     _CREN	set	196
    83                           	global	_GIE
    84  005F                     _GIE	set	95
    85                           	global	_RCIF
    86  0065                     _RCIF	set	101
    87                           	global	_SPEN
    88  00C7                     _SPEN	set	199
    89                           	global	_TXIF
    90  0064                     _TXIF	set	100
    91                           	global	_SPBRG
    92  0099                     _SPBRG	set	153
    93                           	global	_TRISCbits
    94  0087                     _TRISCbits	set	135
    95                           	global	_BRGH
    96  04C2                     _BRGH	set	1218
    97                           	global	_RCIE
    98  0465                     _RCIE	set	1125
    99                           	global	_SYNC
   100  04C4                     _SYNC	set	1220
   101                           	global	_TXEN
   102  04C5                     _TXEN	set	1221
   103                           	global	_TXIE
   104  0464                     _TXIE	set	1124
   105                           	global	_EEADR
   106  010D                     _EEADR	set	269
   107                           	global	_EEDATA
   108  010C                     _EEDATA	set	268
   109                           	global	_EECON1
   110  018C                     _EECON1	set	396
   111                           	global	_EECON2
   112  018D                     _EECON2	set	397
   113                           	global	_RD
   114  0C60                     _RD	set	3168
   115                           	global	_WR
   116  0C61                     _WR	set	3169
   117                           	global	_WREN
   118  0C62                     _WREN	set	3170
   119                           	file	"C:/DOCUME~1/ali/LOCALS~1/Temp\s1gc."
   120                           	line	#
   121                           psect cinit,class=CODE,delta=2
   122                           global start_initialization
   123  0104                     start_initialization:
   124                           
   125                           psect	bssCOMMON,class=COMMON,space=1
   126                           global __pbssCOMMON
   127  0075                     __pbssCOMMON:
   128  0075                     _MUX:
   129  0075                            ds      1
   130                           
   131  0076                     _RELAY:
   132  0076                            ds      1
   133                           
   134  0077                     _usart_curbyte:
   135  0077                            ds      1
   136                           
   137                           psect	bssBANK0,class=BANK0,space=1
   138                           global __pbssBANK0
   139  0027                     __pbssBANK0:
   140  0027                     _usart_curpacket:
   141  0027                            ds      3
   142                           
   143                           ; Clear objects allocated to COMMON
   144                           psect cinit,class=CODE,delta=2
   145  0104  01F5               	clrf	((__pbssCOMMON)+0)&07Fh
   146  0105  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
   147  0106  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
   148                           ; Clear objects allocated to BANK0
   149                           psect cinit,class=CODE,delta=2
   150  0107  01A7               	clrf	((__pbssBANK0)+0)&07Fh
   151  0108  01A8               	clrf	((__pbssBANK0)+1)&07Fh
   152  0109  01A9               	clrf	((__pbssBANK0)+2)&07Fh
   153                           psect cinit,class=CODE,delta=2
   154                           global end_of_initialization
   155                           
   156                           ;End of C runtime variable initialization code
   157                           
   158  010A                     end_of_initialization:
   159  010A  0183               clrf status
   160  010B  120A  118A  2815   ljmp _main	;jump to C main() function
   161                           psect	cstackCOMMON,class=COMMON,space=1
   162                           global __pcstackCOMMON
   163  0070                     __pcstackCOMMON:
   164                           	global	?_usart_init
   165  0070                     ?_usart_init:	; 0 bytes @ 0x0
   166                           	global	??_usart_getch
   167  0070                     ??_usart_getch:	; 0 bytes @ 0x0
   168                           	global	?_usart_putch
   169  0070                     ?_usart_putch:	; 0 bytes @ 0x0
   170                           	global	?_pseudoRegisters_init
   171  0070                     ?_pseudoRegisters_init:	; 0 bytes @ 0x0
   172                           	global	?_init
   173  0070                     ?_init:	; 0 bytes @ 0x0
   174                           	global	?_isr
   175  0070                     ?_isr:	; 0 bytes @ 0x0
   176                           	global	??_isr
   177  0070                     ??_isr:	; 0 bytes @ 0x0
   178                           	global	?_main
   179  0070                     ?_main:	; 0 bytes @ 0x0
   180                           	global	?_usart_getch
   181  0070                     ?_usart_getch:	; 1 bytes @ 0x0
   182                           	global	?_eeprom_getch
   183  0070                     ?_eeprom_getch:	; 1 bytes @ 0x0
   184  0070                     	ds	5
   185                           psect	cstackBANK0,class=BANK0,space=1
   186                           global __pcstackBANK0
   187  0020                     __pcstackBANK0:
   188                           	global	??_usart_init
   189  0020                     ??_usart_init:	; 0 bytes @ 0x0
   190                           	global	??_usart_putch
   191  0020                     ??_usart_putch:	; 0 bytes @ 0x0
   192                           	global	??_eeprom_getch
   193  0020                     ??_eeprom_getch:	; 0 bytes @ 0x0
   194                           	global	??_pseudoRegisters_init
   195  0020                     ??_pseudoRegisters_init:	; 0 bytes @ 0x0
   196                           	global	??_init
   197  0020                     ??_init:	; 0 bytes @ 0x0
   198                           	global	?_getCaps
   199  0020                     ?_getCaps:	; 2 bytes @ 0x0
   200                           	global	eeprom_getch@loc
   201  0020                     eeprom_getch@loc:	; 1 bytes @ 0x0
   202                           	global	usart_putch@byte
   203  0020                     usart_putch@byte:	; 1 bytes @ 0x0
   204  0020                     	ds	2
   205                           	global	??_getCaps
   206  0022                     ??_getCaps:	; 0 bytes @ 0x2
   207                           	global	getCaps@devid
   208  0022                     getCaps@devid:	; 1 bytes @ 0x2
   209  0022                     	ds	1
   210                           	global	??_main
   211  0023                     ??_main:	; 0 bytes @ 0x3
   212  0023                     	ds	3
   213                           	global	main@acked
   214  0026                     main@acked:	; 1 bytes @ 0x6
   215  0026                     	ds	1
   216 ;;Data sizes: Strings 0, constant 0, data 0, bss 6, persistent 3 stack 0
   217 ;;Auto spaces:   Size  Autos    Used
   218 ;; COMMON          14      5      10
   219 ;; BANK0           80      7      11
   220 ;; BANK1           80      0       0
   221 ;; BANK3           96      0       0
   222 ;; BANK2           96      0       0
   223                           
   224 ;;
   225 ;; Pointer list with targets:
   226                           
   227                           
   228                           
   229 ;;
   230 ;; Critical Paths under _main in COMMON
   231 ;;
   232 ;;   None.
   233 ;;
   234 ;; Critical Paths under _isr in COMMON
   235 ;;
   236 ;;   None.
   237 ;;
   238 ;; Critical Paths under _main in BANK0
   239 ;;
   240 ;;   _main->_getCaps
   241 ;;
   242 ;; Critical Paths under _isr in BANK0
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _main in BANK1
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _isr in BANK1
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK3
   255 ;;
   256 ;;   None.
   257 ;;
   258 ;; Critical Paths under _isr in BANK3
   259 ;;
   260 ;;   None.
   261 ;;
   262 ;; Critical Paths under _main in BANK2
   263 ;;
   264 ;;   None.
   265 ;;
   266 ;; Critical Paths under _isr in BANK2
   267 ;;
   268 ;;   None.
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   272 ;;
   273                           
   274 ;;
   275 ;;Call Graph Tables:
   276 ;;
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (0) _main                                                 4     4      0     127
   281 ;;                                              3 BANK0      4     4      0
   282 ;;                       _eeprom_getch
   283 ;;                            _getCaps
   284 ;;                               _init
   285 ;;                        _usart_putch
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (1) _init                                                 0     0      0       0
   288 ;;               _pseudoRegisters_init
   289 ;;                         _usart_init
   290 ;; ---------------------------------------------------------------------------------
   291 ;; (1) _usart_putch                                          1     1      0      31
   292 ;;                                              0 BANK0      1     1      0
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (1) _getCaps                                              3     1      2      31
   295 ;;                                              0 BANK0      3     1      2
   296 ;; ---------------------------------------------------------------------------------
   297 ;; (2) _usart_init                                           0     0      0       0
   298 ;; ---------------------------------------------------------------------------------
   299 ;; (2) _pseudoRegisters_init                                 0     0      0       0
   300 ;; ---------------------------------------------------------------------------------
   301 ;; (1) _eeprom_getch                                         1     1      0      31
   302 ;;                                              0 BANK0      1     1      0
   303 ;; ---------------------------------------------------------------------------------
   304 ;; Estimated maximum stack depth 2
   305 ;; ---------------------------------------------------------------------------------
   306 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   307 ;; ---------------------------------------------------------------------------------
   308 ;; (3) _isr                                                  5     5      0       0
   309 ;;                                              0 COMMON     5     5      0
   310 ;;                        _usart_getch
   311 ;; ---------------------------------------------------------------------------------
   312 ;; (4) _usart_getch                                          0     0      0       0
   313 ;; ---------------------------------------------------------------------------------
   314 ;; Estimated maximum stack depth 4
   315 ;; ---------------------------------------------------------------------------------
   316                           
   317 ;; Call Graph Graphs:
   318                           
   319 ;; _main (ROOT)
   320 ;;   _eeprom_getch
   321 ;;   _getCaps
   322 ;;   _init
   323 ;;     _pseudoRegisters_init
   324 ;;     _usart_init
   325 ;;   _usart_putch
   326 ;;
   327 ;; _isr (ROOT)
   328 ;;   _usart_getch
   329 ;;
   330                           
   331 ;; Address spaces:
   332                           
   333 ;;Name               Size   Autos  Total    Cost      Usage
   334 ;;BITCOMMON            E      0       0       0        0.0%
   335 ;;EEDATA             100      0       0       0        0.0%
   336 ;;NULL                 0      0       0       0        0.0%
   337 ;;CODE                 0      0       0       0        0.0%
   338 ;;COMMON               E      5       A       1       71.4%
   339 ;;BITSFR0              0      0       0       1        0.0%
   340 ;;SFR0                 0      0       0       1        0.0%
   341 ;;BITSFR1              0      0       0       2        0.0%
   342 ;;SFR1                 0      0       0       2        0.0%
   343 ;;STACK                0      0       6       2        0.0%
   344 ;;ABS                  0      0      15       3        0.0%
   345 ;;BITBANK0            50      0       0       4        0.0%
   346 ;;BITSFR3              0      0       0       4        0.0%
   347 ;;SFR3                 0      0       0       4        0.0%
   348 ;;BANK0               50      7       B       5       13.8%
   349 ;;BITSFR2              0      0       0       5        0.0%
   350 ;;SFR2                 0      0       0       5        0.0%
   351 ;;BITBANK1            50      0       0       6        0.0%
   352 ;;BANK1               50      0       0       7        0.0%
   353 ;;BITBANK3            60      0       0       8        0.0%
   354 ;;BANK3               60      0       0       9        0.0%
   355 ;;BITBANK2            60      0       0      10        0.0%
   356 ;;BANK2               60      0       0      11        0.0%
   357 ;;DATA                 0      0      1B      12        0.0%
   358                           
   359                           	global	_main
   360                           psect	maintext,global,class=CODE,delta=2
   361                           global __pmaintext
   362  0015                     __pmaintext:
   363                           
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 109 in file "../main.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  acked           1    6[BANK0 ] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;		None               void
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 17F/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       1       0       0       0
   382 ;;      Temps:          0       3       0       0       0
   383 ;;      Totals:         0       4       0       0       0
   384 ;;Total ram usage:        4 bytes
   385 ;; Hardware stack levels required when called:    4
   386 ;; This function calls:
   387 ;;		_eeprom_getch
   388 ;;		_getCaps
   389 ;;		_init
   390 ;;		_usart_putch
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           psect	maintext
   396                           	file	"../main.c"
   397                           	line	109
   398                           	global	__size_of_main
   399  0057                     	__size_of_main	equ	__end_of_main-_main
   400                           	
   401  0015                     _main:	
   402                           	opt	stack 4
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   404                           	line	110
   405                           	
   406  0015                     l3828:	
   407                           ;main.c: 110: devid = eeprom_getch(0x00);
   408  0015  3000               	movlw	(0)
   409  0016  120A  118A  20DE   	fcall	_eeprom_getch
              120A  118A         
   410  001B  1283               	bcf	status, 5	;RP0=0, select bank0
   411  001C  1303               	bcf	status, 6	;RP1=0, select bank0
   412  001D  00A3               	movwf	(??_main+0)+0
   413  001E  0823               	movf	(??_main+0)+0,w
   414  001F  00AA               	movwf	(_devid)
   415                           	line	111
   416                           	
   417  0020                     l3830:	
   418                           ;main.c: 111: devcaps = getCaps(devid);
   419  0020  082A               	movf	(_devid),w
   420  0021  120A  118A  20A0   	fcall	_getCaps
              120A  118A         
   421  0026  1283               	bcf	status, 5	;RP0=0, select bank0
   422  0027  1303               	bcf	status, 6	;RP1=0, select bank0
   423  0028  0821               	movf	(1+(?_getCaps)),w
   424  0029  01F9               	clrf	(_devcaps+1)
   425  002A  07F9               	addwf	(_devcaps+1)
   426  002B  0820               	movf	(0+(?_getCaps)),w
   427  002C  01F8               	clrf	(_devcaps)
   428  002D  07F8               	addwf	(_devcaps)
   429                           
   430                           	line	113
   431                           	
   432  002E                     l3832:	
   433                           ;main.c: 113: init();
   434  002E  120A  118A  20CC   	fcall	_init
              120A  118A         
   435                           	line	115
   436                           	
   437  0033                     l3834:	
   438                           ;main.c: 115: if(devcaps & 0x01)
   439  0033  1C78               	btfss	(_devcaps),(0)&7
   440  0034  2836               	goto	u2421
   441  0035  2837               	goto	u2420
   442  0036                     u2421:
   443  0036  2868               	goto	l1187
   444  0037                     u2420:
   445                           	line	117
   446                           	
   447  0037                     l3836:	
   448                           ;main.c: 116: {
   449                           ;main.c: 117: unsigned char acked = 0;
   450  0037  1283               	bcf	status, 5	;RP0=0, select bank0
   451  0038  1303               	bcf	status, 6	;RP1=0, select bank0
   452  0039  01A6               	clrf	(main@acked)
   453                           	line	118
   454                           ;main.c: 118: while(!acked)
   455  003A  285F               	goto	l3842
   456                           	
   457  003B                     l1184:	
   458                           	line	120
   459                           	
   460  003B                     l3838:	
   461                           ;main.c: 119: {
   462                           ;main.c: 120: usart_putch(0x02);
   463  003B  3002               	movlw	(02h)
   464  003C  120A  118A  20ED   	fcall	_usart_putch
              120A  118A         
   465                           	line	121
   466                           ;main.c: 121: usart_putch(devid);
   467  0041  1283               	bcf	status, 5	;RP0=0, select bank0
   468  0042  1303               	bcf	status, 6	;RP1=0, select bank0
   469  0043  082A               	movf	(_devid),w
   470  0044  120A  118A  20ED   	fcall	_usart_putch
              120A  118A         
   471                           	line	122
   472                           ;main.c: 122: usart_putch(0x00);
   473  0049  3000               	movlw	(0)
   474  004A  120A  118A  20ED   	fcall	_usart_putch
              120A  118A         
   475                           	line	123
   476                           	
   477  004F                     l3840:	
   478                           ;main.c: 123: _delay((unsigned long)((100)*(20000000/4000.0)));
   479                           	opt asmopt_off
   480  004F  3003               movlw  3
   481  0050  1283               	bcf	status, 5	;RP0=0, select bank0
   482  0051  1303               	bcf	status, 6	;RP1=0, select bank0
   483  0052  00A5               movwf	((??_main+0)+0+2),f
   484  0053  308A               movlw	138
   485  0054  00A4               movwf	((??_main+0)+0+1),f
   486  0055  3056               	movlw	86
   487  0056  00A3               movwf	((??_main+0)+0),f
   488  0057                     u2447:
   489  0057  0BA3               	decfsz	((??_main+0)+0),f
   490  0058  2857               	goto	u2447
   491  0059  0BA4               	decfsz	((??_main+0)+0+1),f
   492  005A  2857               	goto	u2447
   493  005B  0BA5               	decfsz	((??_main+0)+0+2),f
   494  005C  2857               	goto	u2447
   495  005D  285E               	nop2
   496                           opt asmopt_on
   497                           
   498  005E  285F               	goto	l3842
   499                           	line	124
   500                           	
   501  005F                     l1183:	
   502                           	line	118
   503                           	
   504  005F                     l3842:	
   505  005F  1283               	bcf	status, 5	;RP0=0, select bank0
   506  0060  1303               	bcf	status, 6	;RP1=0, select bank0
   507  0061  0826               	movf	(main@acked),w
   508  0062  1D03               	skipz
   509  0063  2865               	goto	u2430
   510  0064  283B               	goto	l3838
   511  0065                     u2430:
   512  0065  2868               	goto	l1187
   513                           	
   514  0066                     l1185:	
   515  0066  2868               	goto	l1187
   516                           	line	125
   517                           	
   518  0067                     l1182:	
   519  0067  2868               	goto	l1187
   520                           	line	127
   521                           ;main.c: 124: }
   522                           ;main.c: 125: }
   523                           ;main.c: 127: while(1)
   524                           	
   525  0068                     l1186:	
   526                           	line	130
   527                           ;main.c: 128: {
   528                           	
   529  0068                     l1187:	
   530                           	line	127
   531  0068  2868               	goto	l1187
   532                           	
   533  0069                     l1188:	
   534                           	line	131
   535                           	
   536  0069                     l1189:	
   537                           	global	start
   538  0069  120A  118A  2812   	ljmp	start
   539                           	opt stack 0
   540                           GLOBAL	__end_of_main
   541  006C                     	__end_of_main:
   542 ;; =============== function _main ends ============
   543                           
   544                           	signat	_main,88
   545                           	global	_init
   546                           psect	text308,local,class=CODE,delta=2
   547                           global __ptext308
   548  00CC                     __ptext308:
   549                           
   550 ;; *************** function _init *****************
   551 ;; Defined at:
   552 ;;		line 58 in file "../main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;		None               void
   559 ;; Registers used:
   560 ;;		status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		_pseudoRegisters_init
   575 ;;		_usart_init
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           psect	text308
   581                           	file	"../main.c"
   582                           	line	58
   583                           	global	__size_of_init
   584  0012                     	__size_of_init	equ	__end_of_init-_init
   585                           	
   586  00CC                     _init:	
   587                           	opt	stack 4
   588                           ; Regs used in _init: [status,2+status,0+pclath+cstack]
   589                           	line	59
   590                           	
   591  00CC                     l3818:	
   592                           ;main.c: 59: pseudoRegisters_init();
   593  00CC  120A  118A  210E   	fcall	_pseudoRegisters_init
              120A  118A         
   594                           	line	61
   595                           	
   596  00D1                     l3820:	
   597                           ;main.c: 61: GIE = 1;
   598  00D1  178B               	bsf	(95/8),(95)&7
   599                           	line	63
   600                           	
   601  00D2                     l3822:	
   602                           ;main.c: 63: usart_curbyte = 0;
   603  00D2  01F7               	clrf	(_usart_curbyte)
   604                           	line	65
   605                           	
   606  00D3                     l3824:	
   607                           ;main.c: 65: if(devcaps & 0x01)
   608  00D3  1C78               	btfss	(_devcaps),(0)&7
   609  00D4  28D6               	goto	u2411
   610  00D5  28D7               	goto	u2410
   611  00D6                     u2411:
   612  00D6  28DD               	goto	l1164
   613  00D7                     u2410:
   614                           	line	66
   615                           	
   616  00D7                     l3826:	
   617                           ;main.c: 66: usart_init();
   618  00D7  120A  118A  20B9   	fcall	_usart_init
              120A  118A         
   619  00DC  28DD               	goto	l1164
   620                           	
   621  00DD                     l1163:	
   622                           	line	67
   623                           	
   624  00DD                     l1164:	
   625  00DD  0008               	return
   626                           	opt stack 0
   627                           GLOBAL	__end_of_init
   628  00DE                     	__end_of_init:
   629 ;; =============== function _init ends ============
   630                           
   631                           	signat	_init,88
   632                           	global	_usart_putch
   633                           psect	text309,local,class=CODE,delta=2
   634                           global __ptext309
   635  00ED                     __ptext309:
   636                           
   637 ;; *************** function _usart_putch *****************
   638 ;; Defined at:
   639 ;;		line 28 in file "../usart.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  byte            1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  byte            1    0[BANK0 ] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       1       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       1       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           psect	text309
   667                           	file	"../usart.c"
   668                           	line	28
   669                           	global	__size_of_usart_putch
   670  000C                     	__size_of_usart_putch	equ	__end_of_usart_putch-_usart_putch
   671                           	
   672  00ED                     _usart_putch:	
   673                           	opt	stack 5
   674                           ; Regs used in _usart_putch: [wreg]
   675                           ;usart_putch@byte stored from wreg
   676  00ED  1283               	bcf	status, 5	;RP0=0, select bank0
   677  00EE  1303               	bcf	status, 6	;RP1=0, select bank0
   678  00EF  00A0               	movwf	(usart_putch@byte)
   679                           	line	30
   680                           	
   681  00F0                     l3814:	
   682                           ;usart.c: 30: while(!TXIF)
   683  00F0  28F1               	goto	l1765
   684                           	
   685  00F1                     l1766:	
   686                           	line	31
   687                           ;usart.c: 31: continue;
   688                           	
   689  00F1                     l1765:	
   690                           	line	30
   691  00F1  1E0C               	btfss	(100/8),(100)&7
   692  00F2  28F4               	goto	u2401
   693  00F3  28F5               	goto	u2400
   694  00F4                     u2401:
   695  00F4  28F1               	goto	l1765
   696  00F5                     u2400:
   697  00F5  28F6               	goto	l3816
   698                           	
   699  00F6                     l1767:	
   700                           	line	32
   701                           	
   702  00F6                     l3816:	
   703                           ;usart.c: 32: TXREG = byte;
   704  00F6  0820               	movf	(usart_putch@byte),w
   705  00F7  0099               	movwf	(25)	;volatile
   706                           	line	33
   707                           	
   708  00F8                     l1768:	
   709  00F8  0008               	return
   710                           	opt stack 0
   711                           GLOBAL	__end_of_usart_putch
   712  00F9                     	__end_of_usart_putch:
   713 ;; =============== function _usart_putch ends ============
   714                           
   715                           	signat	_usart_putch,4216
   716                           	global	_getCaps
   717                           psect	text310,local,class=CODE,delta=2
   718                           global __ptext310
   719  00A0                     __ptext310:
   720                           
   721 ;; *************** function _getCaps *****************
   722 ;; Defined at:
   723 ;;		line 94 in file "../main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  devid           1    wreg     unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  devid           1    2[BANK0 ] unsigned char 
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2    0[BANK0 ] int 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       2       0       0       0
   738 ;;      Locals:         0       1       0       0       0
   739 ;;      Temps:          0       0       0       0       0
   740 ;;      Totals:         0       3       0       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    2
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           psect	text310
   751                           	file	"../main.c"
   752                           	line	94
   753                           	global	__size_of_getCaps
   754  0019                     	__size_of_getCaps	equ	__end_of_getCaps-_getCaps
   755                           	
   756  00A0                     _getCaps:	
   757                           	opt	stack 5
   758                           ; Regs used in _getCaps: [wreg-fsr0h+status,2+status,0]
   759                           ;getCaps@devid stored from wreg
   760  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
   761  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
   762  00A2  00A2               	movwf	(getCaps@devid)
   763                           	line	95
   764                           	
   765  00A3                     l3796:	
   766                           ;main.c: 95: switch(devid)
   767  00A3  28B0               	goto	l3812
   768                           	line	97
   769                           ;main.c: 96: {
   770                           ;main.c: 97: case 0xA0:
   771                           	
   772  00A4                     l1175:	
   773                           	line	98
   774                           	
   775  00A4                     l3798:	
   776                           ;main.c: 98: return 0x01 & 0x04 & (0x10 & 0x20 & 0x30);
   777  00A4  01A0               	clrf	(?_getCaps)
   778  00A5  01A1               	clrf	(?_getCaps+1)
   779  00A6  28B8               	goto	l1176
   780                           	
   781  00A7                     l3800:	
   782  00A7  28B8               	goto	l1176
   783                           	line	99
   784                           	
   785  00A8                     l3802:	
   786                           ;main.c: 99: break;
   787  00A8  28B8               	goto	l1176
   788                           	line	100
   789                           ;main.c: 100: case 0xA2:
   790                           	
   791  00A9                     l1178:	
   792                           	line	101
   793                           	
   794  00A9                     l3804:	
   795                           ;main.c: 101: return 0x01 & 0x02 & 0x04 & 0x08 & ((0x10 & 0x20 & 0x30) & 0x40);
   796  00A9  01A0               	clrf	(?_getCaps)
   797  00AA  01A1               	clrf	(?_getCaps+1)
   798  00AB  28B8               	goto	l1176
   799                           	
   800  00AC                     l3806:	
   801  00AC  28B8               	goto	l1176
   802                           	line	102
   803                           	
   804  00AD                     l3808:	
   805                           ;main.c: 102: break;
   806  00AD  28B8               	goto	l1176
   807                           	line	103
   808                           ;main.c: 103: default:
   809                           	
   810  00AE                     l1179:	
   811                           	line	104
   812                           ;main.c: 104: break;
   813  00AE  28B8               	goto	l1176
   814                           	line	105
   815                           	
   816  00AF                     l3810:	
   817                           ;main.c: 105: }
   818  00AF  28B8               	goto	l1176
   819                           	line	95
   820                           	
   821  00B0                     l1174:	
   822                           	
   823  00B0                     l3812:	
   824  00B0  0822               	movf	(getCaps@devid),w
   825                           	; Switch size 1, requested type "space"
   826                           ; Number of cases is 2, Range of values is 160 to 162
   827                           ; switch strategies available:
   828                           ; Name         Instructions Cycles
   829                           ; simple_byte            7     4 (average)
   830                           ; direct_byte           20    11 (fixed)
   831                           ; jumptable            263     9 (fixed)
   832                           ;	Chosen strategy is simple_byte
   833                           
   834                           	opt asmopt_off
   835  00B1  3AA0               	xorlw	160^0	; case 160
   836  00B2  1903               	skipnz
   837  00B3  28A4               	goto	l3798
   838  00B4  3A02               	xorlw	162^160	; case 162
   839  00B5  1903               	skipnz
   840  00B6  28A9               	goto	l3804
   841  00B7  28B8               	goto	l1176
   842                           	opt asmopt_on
   843                           
   844                           	line	105
   845                           	
   846  00B8                     l1177:	
   847                           	line	106
   848                           	
   849  00B8                     l1176:	
   850  00B8  0008               	return
   851                           	opt stack 0
   852                           GLOBAL	__end_of_getCaps
   853  00B9                     	__end_of_getCaps:
   854 ;; =============== function _getCaps ends ============
   855                           
   856                           	signat	_getCaps,4218
   857                           	global	_usart_init
   858                           psect	text311,local,class=CODE,delta=2
   859                           global __ptext311
   860  00B9                     __ptext311:
   861                           
   862 ;; *************** function _usart_init *****************
   863 ;; Defined at:
   864 ;;		line 7 in file "../usart.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		status,2
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    2
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_init
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           psect	text311
   892                           	file	"../usart.c"
   893                           	line	7
   894                           	global	__size_of_usart_init
   895  0013                     	__size_of_usart_init	equ	__end_of_usart_init-_usart_init
   896                           	
   897  00B9                     _usart_init:	
   898                           	opt	stack 4
   899                           ; Regs used in _usart_init: [status,2]
   900                           	line	9
   901                           	
   902  00B9                     l3778:	
   903                           ;usart.c: 9: TRISCbits.TRISC7 = 1;
   904  00B9  1683               	bsf	status, 5	;RP0=1, select bank1
   905  00BA  1303               	bcf	status, 6	;RP1=0, select bank1
   906  00BB  1787               	bsf	(135)^080h,7	;volatile
   907                           	line	10
   908                           ;usart.c: 10: TRISCbits.TRISC6 = 1;
   909  00BC  1707               	bsf	(135)^080h,6	;volatile
   910                           	line	12
   911                           	
   912  00BD                     l3780:	
   913                           ;usart.c: 12: SPBRG = 0;
   914  00BD  0199               	clrf	(153)^080h	;volatile
   915                           	line	14
   916                           	
   917  00BE                     l3782:	
   918                           ;usart.c: 14: BRGH = 1;
   919  00BE  1518               	bsf	(1218/8)^080h,(1218)&7
   920                           	line	15
   921                           	
   922  00BF                     l3784:	
   923                           ;usart.c: 15: SYNC = 0;
   924  00BF  1218               	bcf	(1220/8)^080h,(1220)&7
   925                           	line	16
   926                           	
   927  00C0                     l3786:	
   928                           ;usart.c: 16: SPEN = 1;
   929  00C0  1283               	bcf	status, 5	;RP0=0, select bank0
   930  00C1  1303               	bcf	status, 6	;RP1=0, select bank0
   931  00C2  1798               	bsf	(199/8),(199)&7
   932                           	line	18
   933                           	
   934  00C3                     l3788:	
   935                           ;usart.c: 18: TXIE = 1;
   936  00C3  1683               	bsf	status, 5	;RP0=1, select bank1
   937  00C4  1303               	bcf	status, 6	;RP1=0, select bank1
   938  00C5  160C               	bsf	(1124/8)^080h,(1124)&7
   939                           	line	19
   940                           	
   941  00C6                     l3790:	
   942                           ;usart.c: 19: TXEN = 1;
   943  00C6  1698               	bsf	(1221/8)^080h,(1221)&7
   944                           	line	21
   945                           	
   946  00C7                     l3792:	
   947                           ;usart.c: 21: RCIE = 1;
   948  00C7  168C               	bsf	(1125/8)^080h,(1125)&7
   949                           	line	22
   950                           	
   951  00C8                     l3794:	
   952                           ;usart.c: 22: CREN = 1;
   953  00C8  1283               	bcf	status, 5	;RP0=0, select bank0
   954  00C9  1303               	bcf	status, 6	;RP1=0, select bank0
   955  00CA  1618               	bsf	(196/8),(196)&7
   956                           	line	24
   957                           	
   958  00CB                     l1762:	
   959  00CB  0008               	return
   960                           	opt stack 0
   961                           GLOBAL	__end_of_usart_init
   962  00CC                     	__end_of_usart_init:
   963 ;; =============== function _usart_init ends ============
   964                           
   965                           	signat	_usart_init,88
   966                           	global	_pseudoRegisters_init
   967                           psect	text312,local,class=CODE,delta=2
   968                           global __ptext312
   969  010E                     __ptext312:
   970                           
   971 ;; *************** function _pseudoRegisters_init *****************
   972 ;; Defined at:
   973 ;;		line 61 in file "../input.h"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		None
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_init
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           psect	text312
  1001                           	file	"../input.h"
  1002                           	line	61
  1003                           	global	__size_of_pseudoRegisters_init
  1004  0003                     	__size_of_pseudoRegisters_init	equ	__end_of_pseudoRegisters_init-_pseudoRegisters_init
  1005                           	
  1006  010E                     _pseudoRegisters_init:	
  1007                           	opt	stack 4
  1008                           ; Regs used in _pseudoRegisters_init: []
  1009                           	line	62
  1010                           	
  1011  010E                     l3776:	
  1012                           ;input.h: 62: RELAY = 0x00;
  1013  010E  01F6               	clrf	(_RELAY)
  1014                           	line	63
  1015                           ;input.h: 63: MUX = 0x00;
  1016  010F  01F5               	clrf	(_MUX)
  1017                           	line	64
  1018                           	
  1019  0110                     l1160:	
  1020  0110  0008               	return
  1021                           	opt stack 0
  1022                           GLOBAL	__end_of_pseudoRegisters_init
  1023  0111                     	__end_of_pseudoRegisters_init:
  1024 ;; =============== function _pseudoRegisters_init ends ============
  1025                           
  1026                           	signat	_pseudoRegisters_init,88
  1027                           	global	_eeprom_getch
  1028                           psect	text313,local,class=CODE,delta=2
  1029                           global __ptext313
  1030  00DE                     __ptext313:
  1031                           
  1032 ;; *************** function _eeprom_getch *****************
  1033 ;; Defined at:
  1034 ;;		line 42 in file "../eeprom.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  loc             1    wreg     unsigned char 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  loc             1    0[BANK0 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       1       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         0       1       0       0       0
  1052 ;;Total ram usage:        1 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    2
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           psect	text313
  1062                           	file	"../eeprom.c"
  1063                           	line	42
  1064                           	global	__size_of_eeprom_getch
  1065  000F                     	__size_of_eeprom_getch	equ	__end_of_eeprom_getch-_eeprom_getch
  1066                           	
  1067  00DE                     _eeprom_getch:	
  1068                           	opt	stack 5
  1069                           ; Regs used in _eeprom_getch: [wreg]
  1070                           ;eeprom_getch@loc stored from wreg
  1071  00DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1072  00DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1073  00E0  00A0               	movwf	(eeprom_getch@loc)
  1074                           	line	43
  1075                           	
  1076  00E1                     l3770:	
  1077                           ;eeprom.c: 43: EEADR = loc;
  1078  00E1  0820               	movf	(eeprom_getch@loc),w
  1079  00E2  1283               	bcf	status, 5	;RP0=0, select bank2
  1080  00E3  1703               	bsf	status, 6	;RP1=1, select bank2
  1081  00E4  008D               	movwf	(269)^0100h	;volatile
  1082                           	line	44
  1083                           	
  1084  00E5                     l3772:	
  1085                           ;eeprom.c: 44: RD = 1;
  1086  00E5  1683               	bsf	status, 5	;RP0=1, select bank3
  1087  00E6  1703               	bsf	status, 6	;RP1=1, select bank3
  1088  00E7  140C               	bsf	(3168/8)^0180h,(3168)&7
  1089                           	line	45
  1090                           ;eeprom.c: 45: return EEDATA;
  1091  00E8  1283               	bcf	status, 5	;RP0=0, select bank2
  1092  00E9  1703               	bsf	status, 6	;RP1=1, select bank2
  1093  00EA  080C               	movf	(268)^0100h,w	;volatile
  1094  00EB  28EC               	goto	l569
  1095                           	
  1096  00EC                     l3774:	
  1097                           	line	46
  1098                           	
  1099  00EC                     l569:	
  1100  00EC  0008               	return
  1101                           	opt stack 0
  1102                           GLOBAL	__end_of_eeprom_getch
  1103  00ED                     	__end_of_eeprom_getch:
  1104 ;; =============== function _eeprom_getch ends ============
  1105                           
  1106                           	signat	_eeprom_getch,4217
  1107                           	global	_isr
  1108                           psect	text314,local,class=CODE,delta=2
  1109                           global __ptext314
  1110  006C                     __ptext314:
  1111                           
  1112 ;; *************** function _isr *****************
  1113 ;; Defined at:
  1114 ;;		line 70 in file "../main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          5       0       0       0       0
  1131 ;;      Totals:         5       0       0       0       0
  1132 ;;Total ram usage:        5 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    1
  1135 ;; This function calls:
  1136 ;;		_usart_getch
  1137 ;; This function is called by:
  1138 ;;		Interrupt level 1
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           psect	text314
  1142                           	file	"../main.c"
  1143                           	line	70
  1144                           	global	__size_of_isr
  1145  0034                     	__size_of_isr	equ	__end_of_isr-_isr
  1146                           	
  1147  006C                     _isr:	
  1148                           	opt	stack 4
  1149                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1150                           psect	intentry,class=CODE,delta=2
  1151                           global __pintentry
  1152  0004                     __pintentry:
  1153                           global interrupt_function
  1154  0004                     interrupt_function:
  1155                           	global saved_w
  1156  007E                     	saved_w	set	btemp+0
  1157  0004  00FE               	movwf	saved_w
  1158  0005  0E03               	swapf	status,w
  1159  0006  00F1               	movwf	(??_isr+1)
  1160  0007  0804               	movf	fsr0,w
  1161  0008  00F2               	movwf	(??_isr+2)
  1162  0009  080A               	movf	pclath,w
  1163  000A  00F3               	movwf	(??_isr+3)
  1164  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1165  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1166  000D  087F               	movf	btemp+1,w
  1167  000E  00F4               	movwf	(??_isr+4)
  1168  000F  120A  118A  286C   	ljmp	_isr
  1169                           psect	text314
  1170                           	line	71
  1171                           	
  1172  006C                     i1l3702:	
  1173                           ;main.c: 71: if(devcaps & 0x01)
  1174  006C  1C78               	btfss	(_devcaps),(0)&7
  1175  006D  286F               	goto	u231_21
  1176  006E  2870               	goto	u231_20
  1177  006F                     u231_21:
  1178  006F  2895               	goto	i1l1171
  1179  0070                     u231_20:
  1180                           	line	73
  1181                           	
  1182  0070                     i1l3704:	
  1183                           ;main.c: 72: {
  1184                           ;main.c: 73: if(TXIF)
  1185  0070  1E0C               	btfss	(100/8),(100)&7
  1186  0071  2873               	goto	u232_21
  1187  0072  2874               	goto	u232_20
  1188  0073                     u232_21:
  1189  0073  2875               	goto	i1l1168
  1190  0074                     u232_20:
  1191                           	line	75
  1192                           	
  1193  0074                     i1l3706:	
  1194                           ;main.c: 74: {
  1195                           ;main.c: 75: TXIF = 0;
  1196  0074  120C               	bcf	(100/8),(100)&7
  1197                           	line	76
  1198                           	
  1199  0075                     i1l1168:	
  1200                           	line	77
  1201                           ;main.c: 76: }
  1202                           ;main.c: 77: if(RCIF)
  1203  0075  1E8C               	btfss	(101/8),(101)&7
  1204  0076  2878               	goto	u233_21
  1205  0077  2879               	goto	u233_20
  1206  0078                     u233_21:
  1207  0078  2895               	goto	i1l1171
  1208  0079                     u233_20:
  1209                           	line	80
  1210                           	
  1211  0079                     i1l3708:	
  1212                           ;main.c: 78: {
  1213                           ;main.c: 80: usart_curpacket[usart_curbyte] = usart_getch();
  1214  0079  120A  118A  20F9   	fcall	_usart_getch
              120A  118A         
  1215  007E  00F0               	movwf	(??_isr+0)+0
  1216  007F  0877               	movf	(_usart_curbyte),w
  1217  0080  3E27               	addlw	_usart_curpacket&0ffh
  1218  0081  0084               	movwf	fsr0
  1219  0082  0870               	movf	(??_isr+0)+0,w
  1220  0083  1383               	bcf	status, 7	;select IRP bank0
  1221  0084  0080               	movwf	indf
  1222                           	line	81
  1223                           	
  1224  0085                     i1l3710:	
  1225                           ;main.c: 81: usart_curbyte++;
  1226  0085  3001               	movlw	(01h)
  1227  0086  00F0               	movwf	(??_isr+0)+0
  1228  0087  0870               	movf	(??_isr+0)+0,w
  1229  0088  07F7               	addwf	(_usart_curbyte),f
  1230                           	line	82
  1231                           	
  1232  0089                     i1l3712:	
  1233                           ;main.c: 82: if(usart_curbyte == 3)
  1234  0089  0877               	movf	(_usart_curbyte),w
  1235  008A  3A03               	xorlw	03h
  1236  008B  1D03               	skipz
  1237  008C  288E               	goto	u234_21
  1238  008D  288F               	goto	u234_20
  1239  008E                     u234_21:
  1240  008E  2890               	goto	i1l1170
  1241  008F                     u234_20:
  1242                           	line	85
  1243                           	
  1244  008F                     i1l3714:	
  1245                           ;main.c: 83: {
  1246                           ;main.c: 85: usart_curbyte = 0;
  1247  008F  01F7               	clrf	(_usart_curbyte)
  1248                           	line	86
  1249                           	
  1250  0090                     i1l1170:	
  1251                           	line	88
  1252                           ;main.c: 86: }
  1253                           ;main.c: 88: RCIF = 0;
  1254  0090  1283               	bcf	status, 5	;RP0=0, select bank0
  1255  0091  1303               	bcf	status, 6	;RP1=0, select bank0
  1256  0092  128C               	bcf	(101/8),(101)&7
  1257  0093  2895               	goto	i1l1171
  1258                           	line	89
  1259                           	
  1260  0094                     i1l1169:	
  1261  0094  2895               	goto	i1l1171
  1262                           	line	90
  1263                           	
  1264  0095                     i1l1167:	
  1265                           	line	91
  1266                           	
  1267  0095                     i1l1171:	
  1268  0095  0874               	movf	(??_isr+4),w
  1269  0096  00FF               	movwf	btemp+1
  1270  0097  0873               	movf	(??_isr+3),w
  1271  0098  008A               	movwf	pclath
  1272  0099  0872               	movf	(??_isr+2),w
  1273  009A  0084               	movwf	fsr0
  1274  009B  0E71               	swapf	(??_isr+1)^0FFFFFF80h,w
  1275  009C  0083               	movwf	status
  1276  009D  0EFE               	swapf	saved_w,f
  1277  009E  0E7E               	swapf	saved_w,w
  1278  009F  0009               	retfie
  1279                           	opt stack 0
  1280                           GLOBAL	__end_of_isr
  1281  00A0                     	__end_of_isr:
  1282 ;; =============== function _isr ends ============
  1283                           
  1284                           	signat	_isr,88
  1285                           	global	_usart_getch
  1286                           psect	text315,local,class=CODE,delta=2
  1287                           global __ptext315
  1288  00F9                     __ptext315:
  1289                           
  1290 ;; *************** function _usart_getch *****************
  1291 ;; Defined at:
  1292 ;;		line 36 in file "../usart.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      unsigned char 
  1299 ;; Registers used:
  1300 ;;		wreg
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_isr
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           psect	text315
  1319                           	file	"../usart.c"
  1320                           	line	36
  1321                           	global	__size_of_usart_getch
  1322  000B                     	__size_of_usart_getch	equ	__end_of_usart_getch-_usart_getch
  1323                           	
  1324  00F9                     _usart_getch:	
  1325                           	opt	stack 4
  1326                           ; Regs used in _usart_getch: [wreg]
  1327                           	line	38
  1328                           	
  1329  00F9                     i1l3716:	
  1330                           ;usart.c: 38: while(!RCIF)
  1331  00F9  28FA               	goto	i1l1771
  1332                           	
  1333  00FA                     i1l1772:	
  1334                           	line	39
  1335                           ;usart.c: 39: continue;
  1336                           	
  1337  00FA                     i1l1771:	
  1338                           	line	38
  1339  00FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1340  00FB  1303               	bcf	status, 6	;RP1=0, select bank0
  1341  00FC  1E8C               	btfss	(101/8),(101)&7
  1342  00FD  28FF               	goto	u235_21
  1343  00FE  2900               	goto	u235_20
  1344  00FF                     u235_21:
  1345  00FF  28FA               	goto	i1l1771
  1346  0100                     u235_20:
  1347  0100  2901               	goto	i1l3718
  1348                           	
  1349  0101                     i1l1773:	
  1350                           	line	40
  1351                           	
  1352  0101                     i1l3718:	
  1353                           ;usart.c: 40: return RCREG;
  1354  0101  081A               	movf	(26),w	;volatile
  1355  0102  2903               	goto	i1l1774
  1356                           	
  1357  0103                     i1l3720:	
  1358                           	line	41
  1359                           	
  1360  0103                     i1l1774:	
  1361  0103  0008               	return
  1362                           	opt stack 0
  1363                           GLOBAL	__end_of_usart_getch
  1364  0104                     	__end_of_usart_getch:
  1365 ;; =============== function _usart_getch ends ============
  1366                           
  1367                           	signat	_usart_getch,89
  1368                           psect	text316,local,class=CODE,delta=2
  1369                           global __ptext316
  1370  0000                     __ptext316:
  1371                           	global	btemp
  1372  007E                     	btemp set 07Eh
  1373                           
  1374                           	DABS	1,126,2	;btemp
  1375                           	global	wtemp0
  1376  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Aug 25 21:38:03 2011

                           _RD 0C60                             _WR 0C61                            l569 00EC  
                          _GIE 005F                            _MUX 0075                            _isr 006C  
                          fsr0 0004                            indf 0000                 ??_eeprom_getch 0020  
                         l1160 0110                           l1163 00DD                           l1164 00DD  
                         l1174 00B0                           l1182 0067                           l1175 00A4  
                         l1183 005F                           l1176 00B8                           l1184 003B  
                         l1177 00B8                           l1185 0066                           l1178 00A9  
                         l1186 0068                           l1179 00AE                           l1187 0068  
                         l1188 0069                           l1189 0069                           l1762 00CB  
                         l1765 00F1                           l1766 00F1                           l1767 00F6  
                         l3800 00A7                           l1768 00F8                           l3810 00AF  
                         l3802 00A8                           l3804 00A9                           l3812 00B0  
                         l3820 00D1                           l3806 00AC                           l3814 00F0  
                         l3822 00D2                           l3830 0020                           l3808 00AD  
                         l3816 00F6                           l3824 00D3                           l3840 004F  
                         l3832 002E                           l3770 00E1                           l3826 00D7  
                         l3818 00CC                           l3842 005F                           l3834 0033  
                         l3772 00E5                           l3780 00BD                           l3836 0037  
                         l3828 0015                           l3774 00EC                           l3790 00C6  
                         l3782 00BE                           l3838 003B                           l3776 010E  
                         l3792 00C7                           l3784 00BF                           l3794 00C8  
                         l3786 00C0                           l3778 00B9                           l3788 00C3  
                         l3796 00A3                           l3798 00A4                           ?_isr 0070  
                         _BRGH 04C2                           _CREN 00C4                           u2400 00F5  
                         u2401 00F4                           u2410 00D7                           u2411 00D6  
                         u2420 0037                           u2421 0036                           u2430 0065  
                         u2447 0057                           _RCIE 0465                           _RCIF 0065  
                         _SPEN 00C7                           _TXIE 0464                           _WREN 0C62  
                         _TXEN 04C5                           _TXIF 0064                           _SYNC 04C4  
                  _usart_getch 00F9                           _main 0015                           _init 00CC  
                  _usart_putch 00ED                           btemp 007E                           start 0012  
                        ??_isr 0070                          ?_main 0070                          ?_init 0070  
                        _EEADR 010D                          _CARRY 0018                          _RCREG 001A  
                        _RELAY 0076                          _SPBRG 0099                          _TXREG 0019  
              __end_of_getCaps 00B9                          _devid 002A                          pclath 000A  
                        status 0003                          wtemp0 007E                   __end_of_main 006C  
                 __end_of_init 00DE                         ??_main 0023                         ??_init 0020  
                       _EEDATA 010C                         _EECON1 018C                         _EECON2 018D  
                       i1l1170 0090                         i1l1171 0095                         i1l1167 0095  
                       i1l1168 0075                         i1l1169 0094                         i1l1771 00FA  
                       i1l1772 00FA                         i1l1773 0101                         i1l1774 0103  
                       i1l3710 0085                         i1l3702 006C                         i1l3720 0103  
                       i1l3712 0089                         i1l3704 0070                         i1l3714 008F  
                       i1l3706 0074                         i1l3716 00F9                         i1l3708 0079  
                       i1l3718 0101                         u231_20 0070                         u231_21 006F  
                       u232_20 0074                         u232_21 0073                         u233_20 0079  
                       u233_21 0078                         u234_20 008F                         u234_21 008E  
                       u235_20 0100                         u235_21 00FF                  _usart_curbyte 0077  
         __end_of_eeprom_getch 00ED                      ??_getCaps 0022                         saved_w 007E  
              eeprom_getch@loc 0020  __size_of_pseudoRegisters_init 0003                 __pcstackCOMMON 0070  
                   __pbssBANK0 0027                   ?_usart_getch 0070                   ?_usart_putch 0070  
                   __pnvCOMMON 0078                     __pmaintext 0015                     __pintentry 0004  
        __size_of_eeprom_getch 000F                        _getCaps 00A0                        _devcaps 0078  
                 __size_of_isr 0034           end_of_initialization 010A                   _eeprom_getch 00DE  
                    _TRISCbits 0087           __size_of_usart_getch 000B                     _usart_init 00B9  
         __size_of_usart_putch 000C   __end_of_pseudoRegisters_init 0111            start_initialization 0104  
                  __end_of_isr 00A0                    __pbssCOMMON 0075                  __pcstackBANK0 0020  
                    __pnvBANK0 002A                    ?_usart_init 0070                      __ptext310 00A0  
                    __ptext311 00B9                      __ptext312 010E                      __ptext313 00DE  
                    __ptext314 006C                      __ptext315 00F9                      __ptext316 0000  
                    __ptext308 00CC                      __ptext309 00ED                       ?_getCaps 0020  
         _pseudoRegisters_init 010E              interrupt_function 0004                      main@acked 0026  
          __size_of_usart_init 0013          ?_pseudoRegisters_init 0070                   getCaps@devid 0022  
              usart_putch@byte 0020                _usart_curpacket 0027               __size_of_getCaps 0019  
                ??_usart_getch 0070                  ??_usart_putch 0020                  __size_of_main 0057  
                __size_of_init 0012         ??_pseudoRegisters_init 0020                       intlevel1 0000  
                 ??_usart_init 0020            __end_of_usart_getch 0104            __end_of_usart_putch 00F9  
           __end_of_usart_init 00CC                  ?_eeprom_getch 0070  
